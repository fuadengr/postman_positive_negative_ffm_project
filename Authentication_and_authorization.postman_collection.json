{
	"info": {
		"_postman_id": "2445574c-c1d8-4290-a9a8-faa66e2acf34",
		"name": "Authentication and authorization",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Positive",
			"item": [
				{
					"name": "1. FFME2-19 Registering_company",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3f04e762-7312-4f28-84d8-4bb47feebe42",
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 600ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody)\r",
									"\r",
									"var schema= {\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"title\": \"The root schema\",\r",
									"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
									"    \"default\": {},\r",
									"    \"examples\": [\r",
									"        {\r",
									"            \"data\": {\r",
									"                \"company_address\": \"pennyslvania\",\r",
									"                \"company_name\": \"Workspace\",\r",
									"                \"tin\": \"1122002233\"\r",
									"            },\r",
									"            \"message\": \"Successfully registered company 'Workspace' .\",\r",
									"            \"status\": \"success\"\r",
									"        }\r",
									"    ],\r",
									"    \"required\": [\r",
									"        \"data\",\r",
									"        \"message\",\r",
									"        \"status\"\r",
									"    ],\r",
									"    \"properties\": {\r",
									"        \"data\": {\r",
									"            \"$id\": \"#/properties/data\",\r",
									"            \"type\": \"object\",\r",
									"            \"title\": \"The data schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": {},\r",
									"            \"examples\": [\r",
									"                {\r",
									"                    \"company_address\": \"California\",\r",
									"                    \"company_name\": \"Hollister\",\r",
									"                    \"tin\": \"5863659323\"\r",
									"                }\r",
									"            ],\r",
									"            \"required\": [\r",
									"                \"company_address\",\r",
									"                \"company_name\",\r",
									"                \"tin\"\r",
									"            ],\r",
									"            \"properties\": {\r",
									"                \"company_address\": {\r",
									"                    \"$id\": \"#/properties/data/properties/company_address\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"The company_address schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": \"\",\r",
									"                    \"examples\": [\r",
									"                        \"pennyslvania\"\r",
									"                    ]\r",
									"                },\r",
									"                \"company_name\": {\r",
									"                    \"$id\": \"#/properties/data/properties/company_name\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"The company_name schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": \"\",\r",
									"                    \"examples\": [\r",
									"                        \"Workspace\"\r",
									"                    ]\r",
									"                },\r",
									"                \"tin\": {\r",
									"                    \"$id\": \"#/properties/data/properties/tin\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"The tin schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": \"\",\r",
									"                    \"examples\": [\r",
									"                        \"1122002233\"\r",
									"                    ]\r",
									"                }\r",
									"            },\r",
									"            \"additionalProperties\": true\r",
									"        },\r",
									"        \"message\": {\r",
									"            \"$id\": \"#/properties/message\",\r",
									"            \"type\": \"string\",\r",
									"            \"title\": \"The message schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": \"\",\r",
									"            \"examples\": [\r",
									"                \"Successfully registered company 'Workspace' .\"\r",
									"            ]\r",
									"        },\r",
									"        \"status\": {\r",
									"            \"$id\": \"#/properties/status\",\r",
									"            \"type\": \"string\",\r",
									"            \"title\": \"The status schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": \"\",\r",
									"            \"examples\": [\r",
									"                \"success\"\r",
									"            ]\r",
									"        }\r",
									"    },\r",
									"    \"additionalProperties\": true\r",
									"}\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"pm.test('Schema Validation', function() {\r",
									"  var result=tv4.validateResult(pm.response.json(), schema);\r",
									"  \r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Hollister\",\r\n    \"address\": \"California\",\r\n    \"tin\": \"5863659323\"\r\n}"
						},
						"url": {
							"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-company",
							"host": [
								"167",
								"99",
								"73",
								"130"
							],
							"port": "30287",
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-company"
							]
						},
						"description": "BRD: Techserve4u admin should be able to register company from admin panel.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: As a techserve4u admin, I want to create a new company from the admin panel so that they can use our services.\r\n\r\nTester need to pass these informations of the company's in the body section:\r\n\r\nPost Data: \r\n\tname -> string\r\n\taddress -> string\r\n\ttin -> string\r\n\t\r\n\r\n"
					},
					"response": []
				},
				{
					"name": "1.2 FFME2-18 Register_Company_Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "54a9544e-30c7-44d7-b9c5-d453fa136f6c",
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 600ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody)\r",
									"\r",
									"var schema= {\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"title\": \"The root schema\",\r",
									"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
									"    \"default\": {},\r",
									"    \"examples\": [\r",
									"        {\r",
									"            \"data\": {\r",
									"                \"company_address\": \"pennyslvania\",\r",
									"                \"company_name\": \"Workspace\",\r",
									"                \"tin\": \"1122002233\"\r",
									"            },\r",
									"            \"message\": \"Successfully registered company 'Workspace' .\",\r",
									"            \"status\": \"success\"\r",
									"        }\r",
									"    ],\r",
									"    \"required\": [\r",
									"        \"data\",\r",
									"        \"message\",\r",
									"        \"status\"\r",
									"    ],\r",
									"    \"properties\": {\r",
									"        \"data\": {\r",
									"            \"$id\": \"#/properties/data\",\r",
									"            \"type\": \"object\",\r",
									"            \"title\": \"The data schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": {},\r",
									"            \"examples\": [\r",
									"                {\r",
									"                    \"company_address\": \"pennyslvania\",\r",
									"                    \"company_name\": \"Workspace\",\r",
									"                    \"tin\": \"1122002233\"\r",
									"                }\r",
									"            ],\r",
									"            \"required\": [\r",
									"                \"company_address\",\r",
									"                \"company_name\",\r",
									"                \"tin\"\r",
									"            ],\r",
									"            \"properties\": {\r",
									"                \"company_address\": {\r",
									"                    \"$id\": \"#/properties/data/properties/company_address\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"The company_address schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": \"\",\r",
									"                    \"examples\": [\r",
									"                        \"pennyslvania\"\r",
									"                    ]\r",
									"                },\r",
									"                \"company_name\": {\r",
									"                    \"$id\": \"#/properties/data/properties/company_name\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"The company_name schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": \"\",\r",
									"                    \"examples\": [\r",
									"                        \"Workspace\"\r",
									"                    ]\r",
									"                },\r",
									"                \"tin\": {\r",
									"                    \"$id\": \"#/properties/data/properties/tin\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"The tin schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": \"\",\r",
									"                    \"examples\": [\r",
									"                        \"1122002233\"\r",
									"                    ]\r",
									"                }\r",
									"            },\r",
									"            \"additionalProperties\": true\r",
									"        },\r",
									"        \"message\": {\r",
									"            \"$id\": \"#/properties/message\",\r",
									"            \"type\": \"string\",\r",
									"            \"title\": \"The message schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": \"\",\r",
									"            \"examples\": [\r",
									"                \"Successfully registered company 'Workspace' .\"\r",
									"            ]\r",
									"        },\r",
									"        \"status\": {\r",
									"            \"$id\": \"#/properties/status\",\r",
									"            \"type\": \"string\",\r",
									"            \"title\": \"The status schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": \"\",\r",
									"            \"examples\": [\r",
									"                \"success\"\r",
									"            ]\r",
									"        }\r",
									"    },\r",
									"    \"additionalProperties\": true\r",
									"}\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"pm.test('Schema Validation', function() {\r",
									"  var result=tv4.validateResult(pm.response.json(), schema);\r",
									"    \r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n \"email\": \"california@yahoo.com\",\r\n \"password\": \"1asdf234\",\r\n \"username\": \"California\",\r\n \"firstname\": \"Mr\",\r\n \"lastname\": \"abc\",\r\n \"company_id\": 175,\r\n \"member_type\": 2\r\n}\r\n"
						},
						"url": {
							"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
							"host": [
								"167",
								"99",
								"73",
								"130"
							],
							"port": "30287",
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-dashboard-user"
							]
						},
						"description": "Precondition: User should be able to registraion their company to our service.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: User should be able to create many user's under their company panel. Register Panel Users for Web Admin Dashboard\r\n\r\nTester need to pass these informations of the sub user in the body section:\r\n\r\n\r\n \"email\": (unique)\r\n \"password\":\r\n \"username\": (unique)\r\n \"firstname\":\r\n \"lastname\": \r\n \"company_id\": (From database)\r\n \"member_type\": (default number is 2)\r\n"
					},
					"response": []
				},
				{
					"name": "1.3 FFME2-16 SuperAdmin_Company_Admin_login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d107cd34-d609-453b-a0d3-42537e91dd6e",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 600ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody)\r",
									"\r",
									"var schema= {\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"title\": \"The root schema\",\r",
									"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
									"    \"default\": {},\r",
									"    \"examples\": [\r",
									"        {\r",
									"            \"auth_token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE2MDEwNjg4OTUsImlhdCI6MTYwMTA2NTI5NSwic3ViIjozNDcsInVzZXJfdHlwZSI6IkRhc2hib2FyZCIsIm5hbWUiOiJNciBhYmMiLCJlbWFpbCI6ImNhbGlmb3JuaWFAeWFob28uY29tIiwibWVtYmVyX3R5cGUiOjIsImNvbXBhbnlfaWQiOjE3NSwiZGVzaWduYXRpb24iOm51bGwsImRlcGFydG1lbnQiOm51bGx9.BKoJF3hUWOtX4lJBm8dR1UHSz6lgVrOfsQ7kGH7K-5w\",\r",
									"            \"message\": \"Successfully logged in.\",\r",
									"            \"status\": \"success\"\r",
									"        }\r",
									"    ],\r",
									"    \"required\": [\r",
									"        \"auth_token\",\r",
									"        \"message\",\r",
									"        \"status\"\r",
									"    ],\r",
									"    \"properties\": {\r",
									"        \"auth_token\": {\r",
									"            \"$id\": \"#/properties/auth_token\",\r",
									"            \"type\": \"string\",\r",
									"            \"title\": \"The auth_token schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": \"\",\r",
									"            \"examples\": [\r",
									"                \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE2MDEwNjg4OTUsImlhdCI6MTYwMTA2NTI5NSwic3ViIjozNDcsInVzZXJfdHlwZSI6IkRhc2hib2FyZCIsIm5hbWUiOiJNciBhYmMiLCJlbWFpbCI6ImNhbGlmb3JuaWFAeWFob28uY29tIiwibWVtYmVyX3R5cGUiOjIsImNvbXBhbnlfaWQiOjE3NSwiZGVzaWduYXRpb24iOm51bGwsImRlcGFydG1lbnQiOm51bGx9.BKoJF3hUWOtX4lJBm8dR1UHSz6lgVrOfsQ7kGH7K-5w\"\r",
									"            ]\r",
									"        },\r",
									"        \"message\": {\r",
									"            \"$id\": \"#/properties/message\",\r",
									"            \"type\": \"string\",\r",
									"            \"title\": \"The message schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": \"\",\r",
									"            \"examples\": [\r",
									"                \"Successfully logged in.\"\r",
									"            ]\r",
									"        },\r",
									"        \"status\": {\r",
									"            \"$id\": \"#/properties/status\",\r",
									"            \"type\": \"string\",\r",
									"            \"title\": \"The status schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": \"\",\r",
									"            \"examples\": [\r",
									"                \"success\"\r",
									"            ]\r",
									"        }\r",
									"    },\r",
									"    \"additionalProperties\": true\r",
									"}\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"pm.test('Schema Validation', function() {\r",
									"  var result=tv4.validateResult(pm.response.json(), schema);\r",
									"    if(!result.valid){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"california@yahoo.com\",\r\n    \"password\": \"1asdf234\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "167.99.73.130:30287/api/v1/field-force/auth/dashboard-user-login",
							"host": [
								"167",
								"99",
								"73",
								"130"
							],
							"port": "30287",
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"dashboard-user-login"
							]
						},
						"description": "Precondition: User should be able to registerd as a panel user in the company. \r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: User should be able login their own panel which registerd by their admin. Gain access to the Web Admin Panel with the Panel Admin Credentials\r\n\r\nTester need to pass these informations of the sub user in the body section:\r\n\r\nemail:\r\npassword:\r\n"
					},
					"response": []
				},
				{
					"name": "1.4  FFME-17 To_see__admin_is_Authenticated",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5408cd2d-542c-4b8d-96c9-92199abf1db3",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 600ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody)\r",
									"\r",
									"var schema= {\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"title\": \"The root schema\",\r",
									"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
									"    \"default\": {},\r",
									"    \"examples\": [\r",
									"        {\r",
									"            \"data\": 347,\r",
									"            \"status\": \"success\"\r",
									"        }\r",
									"    ],\r",
									"    \"required\": [\r",
									"        \"data\",\r",
									"        \"status\"\r",
									"    ],\r",
									"    \"properties\": {\r",
									"        \"data\": {\r",
									"            \"$id\": \"#/properties/data\",\r",
									"            \"type\": \"integer\",\r",
									"            \"title\": \"The data schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": 0,\r",
									"            \"examples\": [\r",
									"                347\r",
									"            ]\r",
									"        },\r",
									"        \"status\": {\r",
									"            \"$id\": \"#/properties/status\",\r",
									"            \"type\": \"string\",\r",
									"            \"title\": \"The status schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": \"\",\r",
									"            \"examples\": [\r",
									"                \"success\"\r",
									"            ]\r",
									"        }\r",
									"    },\r",
									"    \"additionalProperties\": true\r",
									"}\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"pm.test('Schema Validation', function() {\r",
									"  var result=tv4.validateResult(pm.response.json(), schema);\r",
									"    if(!result.valid){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE2MDEwNjg5NzcsImlhdCI6MTYwMTA2NTM3Nywic3ViIjozNDcsInVzZXJfdHlwZSI6IkRhc2hib2FyZCIsIm5hbWUiOiJNciBhYmMiLCJlbWFpbCI6ImNhbGlmb3JuaWFAeWFob28uY29tIiwibWVtYmVyX3R5cGUiOjIsImNvbXBhbnlfaWQiOjE3NSwiZGVzaWduYXRpb24iOm51bGwsImRlcGFydG1lbnQiOm51bGx9.njRMDV67Equ6vVzXFcYFSmgmKB1hAoFD-HPiTP_TAUs",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{authUrl}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "167.99.73.130:30287/api/v1/field-force/auth/authenticate-dashboard-user",
							"host": [
								"167",
								"99",
								"73",
								"130"
							],
							"port": "30287",
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"authenticate-dashboard-user"
							]
						},
						"description": "BRD: Techserve4u admin and company admin should be able to authenticate for the admin panel.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\n\r\nMakes a get request with Bearer Token as Authorization parameter in the Header configuration.\r\n\r\nRequest Header:\r\n\t- Authorization: 'Bearer $JWT_auth_token'\r\n\r\nResponds back the user_id and a success message"
					},
					"response": []
				},
				{
					"name": "2. FFME2-14  Create_or_Register_Users",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1a85995c-523f-4930-b150-fcd1f169dfe6",
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 600ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody)\r",
									"\r",
									"var schema= {\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"title\": \"The root schema\",\r",
									"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
									"    \"default\": {},\r",
									"    \"examples\": [\r",
									"        {\r",
									"            \"message\": \"Successfully registered.\",\r",
									"            \"status\": \"success\"\r",
									"        }\r",
									"    ],\r",
									"    \"required\": [\r",
									"        \"message\",\r",
									"        \"status\"\r",
									"    ],\r",
									"    \"properties\": {\r",
									"        \"message\": {\r",
									"            \"$id\": \"#/properties/message\",\r",
									"            \"type\": \"string\",\r",
									"            \"title\": \"The message schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": \"\",\r",
									"            \"examples\": [\r",
									"                \"Successfully registered.\"\r",
									"            ]\r",
									"        },\r",
									"        \"status\": {\r",
									"            \"$id\": \"#/properties/status\",\r",
									"            \"type\": \"string\",\r",
									"            \"title\": \"The status schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": \"\",\r",
									"            \"examples\": [\r",
									"                \"success\"\r",
									"            ]\r",
									"        }\r",
									"    },\r",
									"    \"additionalProperties\": true\r",
									"}\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"pm.test('Schema Validation', function() {\r",
									"  var result=tv4.validateResult(pm.response.json(), schema);\r",
									"    if(!result.valid){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"phone_number\": \"01767666911\",\r\n    \"company_id\": 175,\r\n    \"iso_code\": \"BD\",\r\n    \"first_name\": \"Abidur\",\r\n    \"last_name\": \"Rahman\",\r\n    \"nid\": \"fffffffffffffffff\",\r\n    \"designation\": \"QA Guy\",\r\n    \"department\": \"Tech\"\r\n}"
						},
						"url": {
							"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-user",
							"host": [
								"167",
								"99",
								"73",
								"130"
							],
							"port": "30287",
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "BRD: Company admin should be able to register app user from admin panel.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nPrecondition: User should be able to registered with valid Phone number, company id, iso code, firstname, lastname, NID, designation, department.\r\n\r\nObjective: User should be able to registration to the system.\r\n\r\nTester need to pass these informations of the sub user in the body section:\r\n\r\n\"phone_number\": (Need to be unique)\r\n\"company_id\": \r\n\"iso_code\": \r\n\"first_name\": \r\n\"last_name\": \r\n\"nid\": \r\n\"designation\": \r\n\"department\": \r\n"
					},
					"response": []
				},
				{
					"name": "2.1 FFME2-12 User_login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "303404a7-f04c-4536-adcd-2ffa2b7e3123",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 600ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody)\r",
									"\r",
									"var schema= {\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"title\": \"The root schema\",\r",
									"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
									"    \"default\": {},\r",
									"    \"examples\": [\r",
									"        {\r",
									"            \"auth_token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE2MDE2NzA2NTIsImlhdCI6MTYwMTA2NTg1Miwic3ViIjoxNjgsIm1vZHVsZXMiOltdLCJ1c2VyX3R5cGUiOiJHZW5lcmFsIiwibmFtZSI6IkFiaWR1ciBSYWhtYW4iLCJwaG9uZV9udW1iZXIiOiIwMTc2NzY2NjkxMSIsIm1lbWJlcl90eXBlIjozfQ.MY1hHP672lTRg2TEkiyBfk_FtGLEb1EOGhxu7uklStY\",\r",
									"            \"message\": \"Successfully logged in.\",\r",
									"            \"status\": \"success\"\r",
									"        }\r",
									"    ],\r",
									"    \"required\": [\r",
									"        \"auth_token\",\r",
									"        \"message\",\r",
									"        \"status\"\r",
									"    ],\r",
									"    \"properties\": {\r",
									"        \"auth_token\": {\r",
									"            \"$id\": \"#/properties/auth_token\",\r",
									"            \"type\": \"string\",\r",
									"            \"title\": \"The auth_token schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": \"\",\r",
									"            \"examples\": [\r",
									"                \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE2MDE2NzA2NTIsImlhdCI6MTYwMTA2NTg1Miwic3ViIjoxNjgsIm1vZHVsZXMiOltdLCJ1c2VyX3R5cGUiOiJHZW5lcmFsIiwibmFtZSI6IkFiaWR1ciBSYWhtYW4iLCJwaG9uZV9udW1iZXIiOiIwMTc2NzY2NjkxMSIsIm1lbWJlcl90eXBlIjozfQ.MY1hHP672lTRg2TEkiyBfk_FtGLEb1EOGhxu7uklStY\"\r",
									"            ]\r",
									"        },\r",
									"        \"message\": {\r",
									"            \"$id\": \"#/properties/message\",\r",
									"            \"type\": \"string\",\r",
									"            \"title\": \"The message schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": \"\",\r",
									"            \"examples\": [\r",
									"                \"Successfully logged in.\"\r",
									"            ]\r",
									"        },\r",
									"        \"status\": {\r",
									"            \"$id\": \"#/properties/status\",\r",
									"            \"type\": \"string\",\r",
									"            \"title\": \"The status schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": \"\",\r",
									"            \"examples\": [\r",
									"                \"success\"\r",
									"            ]\r",
									"        }\r",
									"    },\r",
									"    \"additionalProperties\": true\r",
									"}\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"pm.test('Schema Validation', function() {\r",
									"  var result=tv4.validateResult(pm.response.json(), schema);\r",
									"    if(!result.valid){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"phone_number\": \"01767666911\",\r\n    \"firebase_id\": \"firebase_ididid\",\r\n    \"secret_text\": \"the_super_secret_text\",\r\n    \"phone_number_int\": \"+8801767666911\",\r\n    \"iso_code\": \"BD\"\r\n}"
						},
						"url": {
							"raw": "167.99.73.130:30287/api/v1/field-force/auth/user-login",
							"host": [
								"167",
								"99",
								"73",
								"130"
							],
							"port": "30287",
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"user-login"
							]
						},
						"description": "BRD: App user should be able to login the FFM mobile app.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nPrecondition: User should be registered with the system.\r\n\r\nObjective: User should be able to login with their valid information. Log in as user and gives back a JWT Token with user-data.\r\n\r\nTester need to pass these data in the body section\r\n\r\nRequest Body:\r\n\r\n\"phone_number\": \r\n\"firebase_id\": \r\n\"secret_text\": \r\n\"phone_number_int\": \r\n\"iso_code\":\r\n"
					},
					"response": []
				},
				{
					"name": "2.2 FFME2-13 App_user_authentication",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b59ca378-c8e2-445f-8b4e-95414d3534e9",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 600ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody)\r",
									"\r",
									"var schema= {\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"title\": \"The root schema\",\r",
									"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
									"    \"default\": {},\r",
									"    \"examples\": [\r",
									"        {\r",
									"            \"data\": 168,\r",
									"            \"status\": \"success\"\r",
									"        }\r",
									"    ],\r",
									"    \"required\": [\r",
									"        \"data\",\r",
									"        \"status\"\r",
									"    ],\r",
									"    \"properties\": {\r",
									"        \"data\": {\r",
									"            \"$id\": \"#/properties/data\",\r",
									"            \"type\": \"integer\",\r",
									"            \"title\": \"The data schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": 0,\r",
									"            \"examples\": [\r",
									"                168\r",
									"            ]\r",
									"        },\r",
									"        \"status\": {\r",
									"            \"$id\": \"#/properties/status\",\r",
									"            \"type\": \"string\",\r",
									"            \"title\": \"The status schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": \"\",\r",
									"            \"examples\": [\r",
									"                \"success\"\r",
									"            ]\r",
									"        }\r",
									"    },\r",
									"    \"additionalProperties\": true\r",
									"}\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"pm.test('Schema Validation', function() {\r",
									"  var result=tv4.validateResult(pm.response.json(), schema);\r",
									"    if(!result.valid){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE2MDE2NzA3MjgsImlhdCI6MTYwMTA2NTkyOCwic3ViIjoxNjgsIm1vZHVsZXMiOltdLCJ1c2VyX3R5cGUiOiJHZW5lcmFsIiwibmFtZSI6IkFiaWR1ciBSYWhtYW4iLCJwaG9uZV9udW1iZXIiOiIwMTc2NzY2NjkxMSIsIm1lbWJlcl90eXBlIjozfQ.rluck6V-fBzN-FJp-f0u9y_Job-oHoE3wnoEgETCNrE",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{authUrl}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "167.99.73.130:30287/api/v1/field-force/auth/authenticate-user",
							"host": [
								"167",
								"99",
								"73",
								"130"
							],
							"port": "30287",
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"authenticate-user"
							]
						},
						"description": "BRD: App user should be able to authenticate.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nPre condition: Registered FFM app users should be able to login with valid credentials.\r\n\r\nObjective: GET request to  authenticate the user for rest of the work.\r\n\r\nRequest Header:\r\n\t- Authorization: 'Bearer $JWT_auth_token'\r\n\r\nResponse: Success message "
					},
					"response": []
				},
				{
					"name": "2.3  FFME2-11 App_User_View_The_User_list",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2f106563-1765-4d54-b98c-75491777bf2a",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 600ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody)\r",
									"\r",
									"var schema= \r",
									"{\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"array\",\r",
									"    \"title\": \"The root schema\",\r",
									"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
									"    \"default\": [],\r",
									"    \"examples\": [\r",
									"        [\r",
									"            {\r",
									"                \"department\": null,\r",
									"                \"designation\": null,\r",
									"                \"email\": \"california@yahoo.com\",\r",
									"                \"name\": \"Mr abc\",\r",
									"                \"phone_number\": \"\",\r",
									"                \"profile_photo\": \"\"\r",
									"            },\r",
									"            {\r",
									"                \"department\": null,\r",
									"                \"designation\": null,\r",
									"                \"email\": \"californiaaaaa@yahoo.com\",\r",
									"                \"name\": \"Mra abca\",\r",
									"                \"phone_number\": \"\",\r",
									"                \"profile_photo\": \"\"\r",
									"            }\r",
									"        ]\r",
									"    ],\r",
									"    \"additionalItems\": true,\r",
									"    \"items\": {\r",
									"        \"$id\": \"#/items\",\r",
									"        \"anyOf\": [\r",
									"            {\r",
									"                \"$id\": \"#/items/anyOf/0\",\r",
									"                \"type\": \"object\",\r",
									"                \"title\": \"The first anyOf schema\",\r",
									"                \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                \"default\": {},\r",
									"                \"examples\": [\r",
									"                    {\r",
									"                        \"department\": null,\r",
									"                        \"designation\": null,\r",
									"                        \"email\": \"california@yahoo.com\",\r",
									"                        \"name\": \"Mr abc\",\r",
									"                        \"phone_number\": \"\",\r",
									"                        \"profile_photo\": \"\"\r",
									"                    }\r",
									"                ],\r",
									"                \"required\": [\r",
									"                    \"department\",\r",
									"                    \"designation\",\r",
									"                    \"email\",\r",
									"                    \"name\",\r",
									"                    \"phone_number\",\r",
									"                    \"profile_photo\"\r",
									"                ],\r",
									"                \"properties\": {\r",
									"                    \"department\": {\r",
									"                        \"$id\": \"#/items/anyOf/0/properties/department\",\r",
									"                        \"type\": \"null\",\r",
									"                        \"title\": \"The department schema\",\r",
									"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                        \"default\": null,\r",
									"                        \"examples\": [\r",
									"                            null\r",
									"                        ]\r",
									"                    },\r",
									"                    \"designation\": {\r",
									"                        \"$id\": \"#/items/anyOf/0/properties/designation\",\r",
									"                        \"type\": \"null\",\r",
									"                        \"title\": \"The designation schema\",\r",
									"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                        \"default\": null,\r",
									"                        \"examples\": [\r",
									"                            null\r",
									"                        ]\r",
									"                    },\r",
									"                    \"email\": {\r",
									"                        \"$id\": \"#/items/anyOf/0/properties/email\",\r",
									"                        \"type\": \"string\",\r",
									"                        \"title\": \"The email schema\",\r",
									"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                        \"default\": \"\",\r",
									"                        \"examples\": [\r",
									"                            \"california@yahoo.com\"\r",
									"                        ]\r",
									"                    },\r",
									"                    \"name\": {\r",
									"                        \"$id\": \"#/items/anyOf/0/properties/name\",\r",
									"                        \"type\": \"string\",\r",
									"                        \"title\": \"The name schema\",\r",
									"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                        \"default\": \"\",\r",
									"                        \"examples\": [\r",
									"                            \"Mr abc\"\r",
									"                        ]\r",
									"                    },\r",
									"                    \"phone_number\": {\r",
									"                        \"$id\": \"#/items/anyOf/0/properties/phone_number\",\r",
									"                        \"type\": \"string\",\r",
									"                        \"title\": \"The phone_number schema\",\r",
									"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                        \"default\": \"\",\r",
									"                        \"examples\": [\r",
									"                            \"\"\r",
									"                        ]\r",
									"                    },\r",
									"                    \"profile_photo\": {\r",
									"                        \"$id\": \"#/items/anyOf/0/properties/profile_photo\",\r",
									"                        \"type\": \"string\",\r",
									"                        \"title\": \"The profile_photo schema\",\r",
									"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                        \"default\": \"\",\r",
									"                        \"examples\": [\r",
									"                            \"\"\r",
									"                        ]\r",
									"                    }\r",
									"                },\r",
									"                \"additionalProperties\": true\r",
									"            }\r",
									"        ]\r",
									"    }\r",
									"}\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"pm.test('Schema Validation', function() {\r",
									"  var result=tv4.validateResult(pm.response.json(), schema);\r",
									"    if(!result.valid){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE2MDExNTg0NjUsImlhdCI6MTYwMDU1MzY2NSwic3ViIjoxNjgsIm1vZHVsZXMiOltdLCJ1c2VyX3R5cGUiOiJHZW5lcmFsIiwibmFtZSI6IkFiaWR1ciBSYWhtYW4iLCJwaG9uZV9udW1iZXIiOiIwMTc2NzY2NjkxMSIsIm1lbWJlcl90eXBlIjozfQ.BJjXFf_-zh_esn9p1S5Mw6RTyz6fiWluKqB4AP1S4F8",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{authUrl}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "167.99.73.130:30287/api/v1/field-force/auth/get-company-contacts",
							"host": [
								"167",
								"99",
								"73",
								"130"
							],
							"port": "30287",
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"get-company-contacts"
							]
						},
						"description": "BRD:App user should be able to get all the contact information of their company.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nPre condition: Registered FFM app users should be able to login with valid credentials.\r\n\r\nSteps:GET request to list out all the users and their roles from db.\r\n\r\nRequest Header: 'Authorization: Bearer $JWT_auth_token'\r\n\r\nResponse: User list with their all informations."
					},
					"response": []
				},
				{
					"name": "3.1.5  FFME2-15 Company_Admin_should_view_the_list",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b03fae9b-daaa-4d5d-b7ba-fab435d93f46",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 600ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody)\r",
									"\r",
									"var schema= {\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"array\",\r",
									"    \"title\": \"The root schema\",\r",
									"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
									"    \"default\": [],\r",
									"    \"examples\": [\r",
									"        [\r",
									"            {\r",
									"                \"email\": null,\r",
									"                \"first_name\": \"Abidur\",\r",
									"                \"id\": 168,\r",
									"                \"phone_number\": \"01767666911\",\r",
									"                \"registered_on\": \"Wed, 16 Sep 2020 19:53:17 GMT\"\r",
									"            },\r",
									"            {\r",
									"                \"email\": null,\r",
									"                \"first_name\": \"Abidur\",\r",
									"                \"id\": 175,\r",
									"                \"phone_number\": \"01767666999\",\r",
									"                \"registered_on\": \"Sun, 20 Sep 2020 01:47:16 GMT\"\r",
									"            }\r",
									"        ]\r",
									"    ],\r",
									"    \"additionalItems\": true,\r",
									"    \"items\": {\r",
									"        \"$id\": \"#/items\",\r",
									"        \"anyOf\": [\r",
									"            {\r",
									"                \"$id\": \"#/items/anyOf/0\",\r",
									"                \"type\": \"object\",\r",
									"                \"title\": \"The first anyOf schema\",\r",
									"                \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                \"default\": {},\r",
									"                \"examples\": [\r",
									"                    {\r",
									"                        \"email\": null,\r",
									"                        \"first_name\": \"Abidur\",\r",
									"                        \"id\": 168,\r",
									"                        \"phone_number\": \"01767666911\",\r",
									"                        \"registered_on\": \"Wed, 16 Sep 2020 19:53:17 GMT\"\r",
									"                    }\r",
									"                ],\r",
									"                \"required\": [\r",
									"                    \"email\",\r",
									"                    \"first_name\",\r",
									"                    \"id\",\r",
									"                    \"phone_number\",\r",
									"                    \"registered_on\"\r",
									"                ],\r",
									"                \"properties\": {\r",
									"                    \"email\": {\r",
									"                        \"$id\": \"#/items/anyOf/0/properties/email\",\r",
									"                        \"type\": \"null\",\r",
									"                        \"title\": \"The email schema\",\r",
									"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                        \"default\": null,\r",
									"                        \"examples\": [\r",
									"                            null\r",
									"                        ]\r",
									"                    },\r",
									"                    \"first_name\": {\r",
									"                        \"$id\": \"#/items/anyOf/0/properties/first_name\",\r",
									"                        \"type\": \"string\",\r",
									"                        \"title\": \"The first_name schema\",\r",
									"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                        \"default\": \"\",\r",
									"                        \"examples\": [\r",
									"                            \"Abidur\"\r",
									"                        ]\r",
									"                    },\r",
									"                    \"id\": {\r",
									"                        \"$id\": \"#/items/anyOf/0/properties/id\",\r",
									"                        \"type\": \"integer\",\r",
									"                        \"title\": \"The id schema\",\r",
									"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                        \"default\": 0,\r",
									"                        \"examples\": [\r",
									"                            168\r",
									"                        ]\r",
									"                    },\r",
									"                    \"phone_number\": {\r",
									"                        \"$id\": \"#/items/anyOf/0/properties/phone_number\",\r",
									"                        \"type\": \"string\",\r",
									"                        \"title\": \"The phone_number schema\",\r",
									"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                        \"default\": \"\",\r",
									"                        \"examples\": [\r",
									"                            \"01767666911\"\r",
									"                        ]\r",
									"                    },\r",
									"                    \"registered_on\": {\r",
									"                        \"$id\": \"#/items/anyOf/0/properties/registered_on\",\r",
									"                        \"type\": \"string\",\r",
									"                        \"title\": \"The registered_on schema\",\r",
									"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                        \"default\": \"\",\r",
									"                        \"examples\": [\r",
									"                            \"Wed, 16 Sep 2020 19:53:17 GMT\"\r",
									"                        ]\r",
									"                    }\r",
									"                },\r",
									"                \"additionalProperties\": true\r",
									"            }\r",
									"        ]\r",
									"    }\r",
									"}\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"pm.test('Schema Validation', function() {\r",
									"  var result=tv4.validateResult(pm.response.json(), schema);\r",
									"    if(!result.valid){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE2MDEwNjg5NzcsImlhdCI6MTYwMTA2NTM3Nywic3ViIjozNDcsInVzZXJfdHlwZSI6IkRhc2hib2FyZCIsIm5hbWUiOiJNciBhYmMiLCJlbWFpbCI6ImNhbGlmb3JuaWFAeWFob28uY29tIiwibWVtYmVyX3R5cGUiOjIsImNvbXBhbnlfaWQiOjE3NSwiZGVzaWduYXRpb24iOm51bGwsImRlcGFydG1lbnQiOm51bGx9.njRMDV67Equ6vVzXFcYFSmgmKB1hAoFD-HPiTP_TAUs",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{authUrl}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "167.99.73.130:30287/api/v1/field-force/auth/get-company-users/175",
							"host": [
								"167",
								"99",
								"73",
								"130"
							],
							"port": "30287",
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"get-company-users",
								"175"
							]
						},
						"description": "BRD: Company admin should be able to view user list.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nPre condition: Registered company admin should be able to log in through valid credentials.\r\n\r\nObjective:GET request to list out all the admins and their roles from db.\r\n\r\nRequest Header: 'Authorization: Bearer $JWT_auth_token'\r\n\r\nResponse: Admin list with their all informations."
					},
					"response": []
				},
				{
					"name": "3.1.6 FFME2-21 Users_SuperAdmin_CompanyAdmin_Refresh_the_token",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f289cdc1-466b-4b55-87a1-d91c9c15c1e9",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 600ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody)\r",
									"\r",
									"var schema= {\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"title\": \"The root schema\",\r",
									"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
									"    \"default\": {},\r",
									"    \"examples\": [\r",
									"        {\r",
									"            \"auth_token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE2MDE2NzExMDcsImlhdCI6MTYwMTA2NjMwNywic3ViIjoxNjgsIm1vZHVsZXMiOltdLCJ1c2VyX3R5cGUiOiJHZW5lcmFsIiwibmFtZSI6IkFiaWR1ciBSYWhtYW4iLCJwaG9uZV9udW1iZXIiOiIwMTc2NzY2NjkxMSIsIm1lbWJlcl90eXBlIjozfQ.KKxLmwqIJvegqL9WLCPBNJzwQdMVx3oicepuyyJ5e4g\",\r",
									"            \"message\": \"Successfully refreshed token.\",\r",
									"            \"status\": \"success\"\r",
									"        }\r",
									"    ],\r",
									"    \"required\": [\r",
									"        \"auth_token\",\r",
									"        \"message\",\r",
									"        \"status\"\r",
									"    ],\r",
									"    \"properties\": {\r",
									"        \"auth_token\": {\r",
									"            \"$id\": \"#/properties/auth_token\",\r",
									"            \"type\": \"string\",\r",
									"            \"title\": \"The auth_token schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": \"\",\r",
									"            \"examples\": [\r",
									"                \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE2MDE2NzExMDcsImlhdCI6MTYwMTA2NjMwNywic3ViIjoxNjgsIm1vZHVsZXMiOltdLCJ1c2VyX3R5cGUiOiJHZW5lcmFsIiwibmFtZSI6IkFiaWR1ciBSYWhtYW4iLCJwaG9uZV9udW1iZXIiOiIwMTc2NzY2NjkxMSIsIm1lbWJlcl90eXBlIjozfQ.KKxLmwqIJvegqL9WLCPBNJzwQdMVx3oicepuyyJ5e4g\"\r",
									"            ]\r",
									"        },\r",
									"        \"message\": {\r",
									"            \"$id\": \"#/properties/message\",\r",
									"            \"type\": \"string\",\r",
									"            \"title\": \"The message schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": \"\",\r",
									"            \"examples\": [\r",
									"                \"Successfully refreshed token.\"\r",
									"            ]\r",
									"        },\r",
									"        \"status\": {\r",
									"            \"$id\": \"#/properties/status\",\r",
									"            \"type\": \"string\",\r",
									"            \"title\": \"The status schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": \"\",\r",
									"            \"examples\": [\r",
									"                \"success\"\r",
									"            ]\r",
									"        }\r",
									"    },\r",
									"    \"additionalProperties\": true\r",
									"}\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"pm.test('Schema Validation', function() {\r",
									"  var result=tv4.validateResult(pm.response.json(), schema);\r",
									"    if(!result.valid){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE2MDE2NzEwOTYsImlhdCI6MTYwMTA2NjI5Niwic3ViIjoxNjgsIm1vZHVsZXMiOltdLCJ1c2VyX3R5cGUiOiJHZW5lcmFsIiwibmFtZSI6IkFiaWR1ciBSYWhtYW4iLCJwaG9uZV9udW1iZXIiOiIwMTc2NzY2NjkxMSIsIm1lbWJlcl90eXBlIjozfQ.6rZ_c38lSVbI2Js54bsdJdE_nNgjYE_4K9UaecTcCuI",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{authUrl}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "167.99.73.130:30287/api/v1/field-force/auth/refresh-token",
							"host": [
								"167",
								"99",
								"73",
								"130"
							],
							"port": "30287",
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"refresh-token"
							]
						},
						"description": "BRD: Techserve4u/Company admin and FFM app user should be able to refresh their authentication token.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nPre condition: The registered user should be login to the App.\r\n\r\nObjective: GET request to refresh the authentication token for future work.\r\n\r\nRequest Header: 'Authorization: Bearer $JWT_auth_token'\r\n\r\nResponse: Success message with new authentication token."
					},
					"response": []
				},
				{
					"name": "3.1.7 FFME2-20 Dashboard_Admin_logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "99b1fedd-d127-4c4e-b61f-5377cf41ff57",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 600ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody)\r",
									"\r",
									"var schema= \r",
									"{\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"title\": \"The root schema\",\r",
									"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
									"    \"default\": {},\r",
									"    \"examples\": [\r",
									"        {\r",
									"            \"message\": \"Successfully logged out.\",\r",
									"            \"status\": \"success\"\r",
									"        }\r",
									"    ],\r",
									"    \"required\": [\r",
									"        \"message\",\r",
									"        \"status\"\r",
									"    ],\r",
									"    \"properties\": {\r",
									"        \"message\": {\r",
									"            \"$id\": \"#/properties/message\",\r",
									"            \"type\": \"string\",\r",
									"            \"title\": \"The message schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": \"\",\r",
									"            \"examples\": [\r",
									"                \"Successfully logged out.\"\r",
									"            ]\r",
									"        },\r",
									"        \"status\": {\r",
									"            \"$id\": \"#/properties/status\",\r",
									"            \"type\": \"string\",\r",
									"            \"title\": \"The status schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": \"\",\r",
									"            \"examples\": [\r",
									"                \"success\"\r",
									"            ]\r",
									"        }\r",
									"    },\r",
									"    \"additionalProperties\": true\r",
									"}\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"pm.test('Schema Validation', function() {\r",
									"  var result=tv4.validateResult(pm.response.json(), schema);\r",
									"    if(!result.valid){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE2MDEwNjk4NDUsImlhdCI6MTYwMTA2NjI0NSwic3ViIjozNDcsInVzZXJfdHlwZSI6IkRhc2hib2FyZCIsIm5hbWUiOiJNciBhYmMiLCJlbWFpbCI6ImNhbGlmb3JuaWFAeWFob28uY29tIiwibWVtYmVyX3R5cGUiOjIsImNvbXBhbnlfaWQiOjE3NSwiZGVzaWduYXRpb24iOm51bGwsImRlcGFydG1lbnQiOm51bGx9.aFrHh1BNwoLu0IsKx9VgxLReZT_DyfU8sa01KT6NHhQ",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{authUrl}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "167.99.73.130:30287/api/v1/field-force/auth/logout-dashboard-user",
							"host": [
								"167",
								"99",
								"73",
								"130"
							],
							"port": "30287",
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"logout-dashboard-user"
							]
						},
						"description": "BRD: Techserve4u or company admin should be able to logout from the admin panel\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\npre condition: Registered techserve4u/company admin should be able to login the panel.\r\n\r\n\r\nObjective: GET request to Successfully user logout.\r\n\r\n\r\nRequest Header: 'Authorization: Bearer $JWT_auth_token'.\r\n\r\nResponse: User successfully logged out."
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Negative",
			"item": [
				{
					"name": "FFME2-19 Register_company",
					"item": [
						{
							"name": "FFME2-19.1 Register_company_without_the_company_name",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bc95977a-285d-412d-a08b-a2d935a6b2d5",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"name must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"name must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"name must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"name\": \"\",\r\n\"address\": \"a street, b city\",\r\n\"tin\": \"12312313123120\"\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-company",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"register-company"
									]
								},
								"description": "BRD: Techserve4u admin should be able to register company from admin panel.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"company name\" empty.\r\n\r\nTest Data: \r\n{\r\n  \"name\": \"\",\r\n  \"address\": \"a street, b city\",\r\n  \"tin\": \"12312313123120\"\r\n}\r\n\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"name must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"name must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-19.2 Register_company_without_the_address",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eeccd4db-5643-47c1-9cd0-545711dce856",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"address must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"address must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"address must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"name\": \"Fuad\",\r\n\"address\": \"\",\r\n\"tin\": \"12312313123120\"\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-company",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"register-company"
									]
								},
								"description": "BRD: Techserve4u admin should be able to register company from admin panel.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"company address\" empty.\r\n\r\nTest Data: \r\n{\r\n\"name\": \"Fuad\",\r\n\"address\": \"\",\r\n\"tin\": \"12312313123120\"\r\n}\r\n\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"address must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"address must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-19.3 Register_company_without_the_TIN",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b63ef71f-3dea-48b0-946f-cedd0f1e664c",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"tin must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"tin must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"tin must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"name\": \"Fuad\",\r\n\"address\": \"warren,USA\",\r\n\"tin\": \"\"\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-company",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"register-company"
									]
								},
								"description": "BRD: Techserve4u admin should be able to register company from admin panel.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"company TIN\" empty.\r\n\r\nTest Data: \r\n{\r\n\"name\": \"Fuad\",\r\n\"address\": \"warren USA\",\r\n\"tin\": \"\"\r\n}\r\n\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"tin must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"tin must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-19.4 Register_company_without_name_and_address",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a9f6d756-18aa-4019-8c5a-4ff37826db95",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= \r",
											"{\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"name must be non-empty\",\r",
											"                \"address must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"name must be non-empty\",\r",
											"                    \"address must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"name must be non-empty\",\r",
											"                            \"address must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"name\": \"\",\r\n\"address\": \"\",\r\n\"tin\": \"12312313123120\"\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-company",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"register-company"
									]
								},
								"description": "BRD: Techserve4u admin should be able to register company from admin panel.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"Company name and address\" empty.\r\n\r\nTest Data: \r\n{\r\n\"name\": \"\",\r\n\"address\": \"12312313123120\",\r\n\"tin\": \"\"\r\n}\r\n\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"name must be non-empty\",\r\n        \"address must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"name must be non-empty\",\r\n        \"address must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-19.5 Register_company_without_name_and_TIN",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f9ed93de-b244-4790-9466-678f7c2d17fb",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"name must be non-empty\",\r",
											"                \"tin must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"name must be non-empty\",\r",
											"                    \"tin must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"name must be non-empty\",\r",
											"                            \"tin must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"name\": \"\",\r\n\"address\": \"a street, b city\",\r\n\"tin\": \"\"\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-company",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"register-company"
									]
								},
								"description": "BRD: Techserve4u admin should be able to register company from admin panel.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"Company name and TIN\" empty.\r\n\r\nTest Data: \r\n{\r\n\"name\": \"\",\r\n\"address\": \"a street, b city\",\r\n\"tin\": \"\"\r\n}\r\n\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"name must be non-empty\",\r\n        \"tin must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"name must be non-empty\",\r\n        \"tin must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-19.6 Register_company_without_address_and_TIN",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "60ab444b-49ac-46c4-88aa-f6d2604deafc",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"address must be non-empty\",\r",
											"                \"tin must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"address must be non-empty\",\r",
											"                    \"tin must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"address must be non-empty\",\r",
											"                            \"tin must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"name\": \"Fuad\",\r\n\"address\": \"\",\r\n\"tin\": \"\"\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-company",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"register-company"
									]
								},
								"description": "BRD: Techserve4u admin should be able to register company from admin panel.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"Company address and TIN\" empty.\r\n\r\nTest Data: \r\n{\r\n\"name\": \"Fuad\",\r\n\"address\": \"\",\r\n\"tin\": \"\"\r\n}\r\n\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"address must be non-empty\",\r\n        \"tin must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"address must be non-empty\",\r\n        \"tin must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-19.7 Register_company_without_name_address_TIN",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9ec216f0-2ede-44c9-a0fd-d7179f464413",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= \r",
											"{\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"name must be non-empty\",\r",
											"                \"address must be non-empty\",\r",
											"                \"tin must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"name must be non-empty\",\r",
											"                    \"address must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"name must be non-empty\",\r",
											"                            \"address must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"name\": \"\",\r\n\"address\": \"\",\r\n\"tin\": \"\"\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-company",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"register-company"
									]
								},
								"description": "BRD: Techserve4u admin should be able to register company from admin panel.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"company name, address and TIN\" empty.\r\n\r\nTest Data: \r\n{\r\n\"name\": \"\",\r\n\"address\": \"\",\r\n\"tin\": \"\"\r\n}\r\n\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"name must be non-empty\",\r\n        \"address must be non-empty\",\r\n        \"tin must ne non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"name must be non-empty\",\r\n        \"address must be non-empty\",\r\n        \"tin must ne non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n"
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "54c8ea64-2537-497d-938e-460354d73442",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "cb4e5dbd-42e6-4d28-afcc-a0df3e737888",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "FFME2-18 Register_company_admin",
					"item": [
						{
							"name": "FFME2-18.1 Register_company_admin_without_email",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "82d15120-00a9-480a-930c-e49a5ce8c2de",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= \r",
											"{\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"email must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"email must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"email must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"\",\r\n    \"password\": \"Hellohello\",\r\n    \"username\": \"user6\",\r\n    \"firstname\": \"first\",\r\n    \"lastname\": \"lastuser\",\r\n    \"company_id\": 1,\r\n    \"member_type\": 2\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"register-dashboard-user"
									]
								},
								"description": "BRD: Techserve4u admin should be able to register company admin.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"email\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"\",\r\n    \"password\": \"Hellohello\",\r\n    \"username\": \"user6\",\r\n    \"firstname\": \"first\",\r\n    \"lastname\": \"lastuser\",\r\n    \"company_id\": 1,\r\n    \"member_type\": 2\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"email must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"email must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-18.2 Register_company_admin_without_password",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f8197b67-7318-48dc-b0a3-86a78e5d1665",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"password must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"password must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"password must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"Fuad@yahoo.com\",\r\n    \"password\": \"\",\r\n    \"username\": \"user6\",\r\n    \"firstname\": \"first\",\r\n    \"lastname\": \"lastuser\",\r\n    \"company_id\": 1,\r\n    \"member_type\": 2\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"register-dashboard-user"
									]
								},
								"description": "BRD: Techserve4u admin should be able to register company admin.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"password\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"Fuadengr@yahoo.com\",\r\n    \"password\": \"\",\r\n    \"username\": \"user6\",\r\n    \"firstname\": \"first\",\r\n    \"lastname\": \"lastuser\",\r\n    \"company_id\": 1,\r\n    \"member_type\": 2\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"password must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"password must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-18.3 Register_company_admin_without_username",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2a00781a-6884-49e8-a2be-c4c8516e0a2a",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= \r",
											"{\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"username must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"username must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"username must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"Fuad@yahoo.com\",\r\n    \"password\": \"Hellohello\",\r\n    \"username\": \"\",\r\n    \"firstname\": \"first\",\r\n    \"lastname\": \"lastuser\",\r\n    \"company_id\": 1,\r\n    \"member_type\": 2\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"register-dashboard-user"
									]
								},
								"description": "BRD: Techserve4u admin should be able to register company admin.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"username\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"Fuadengr@yahoo.com\",\r\n    \"password\": \"Hellohello\",\r\n    \"username\": \"\",\r\n    \"firstname\": \"first\",\r\n    \"lastname\": \"lastuser\",\r\n    \"company_id\": 1,\r\n    \"member_type\": 2\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"username must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"username must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-18.4 Register_company_admin_without_firstname",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8804d2c3-9c89-4c3f-b41c-a089da2f5d2f",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"firstname must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"firstname must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"firstname must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"Fuad@yahoo.com\",\r\n    \"password\": \"Hellohello\",\r\n    \"username\": \"Helloworld\",\r\n    \"firstname\": \"\",\r\n    \"lastname\": \"lastuser\",\r\n    \"company_id\": 1,\r\n    \"member_type\": 2\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"register-dashboard-user"
									]
								},
								"description": "BRD: Techserve4u admin should be able to register company admin.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"firstname\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"Fuadengr@yahoo.com\",\r\n    \"password\": \"Hellohello\",\r\n    \"username\": \"user6\",\r\n    \"firstname\": \"\",\r\n    \"lastname\": \"lastuser\",\r\n    \"company_id\": 1,\r\n    \"member_type\": 2\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"firstname must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"firstname must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-18.5 Register_company_admin_without_lastname",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5677da17-382c-46ec-a6a8-ec527e166884",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= \r",
											"{\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"lastname must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"lastname must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"lastname must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"Fuad@yahoo.com\",\r\n    \"password\": \"Hellohello\",\r\n    \"username\": \"Helloworld\",\r\n    \"firstname\": \"hello1\",\r\n    \"lastname\": \"\",\r\n    \"company_id\": 1,\r\n    \"member_type\": 2\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"register-dashboard-user"
									]
								},
								"description": "BRD: Techserve4u admin should be able to register company admin.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"lastname\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"Fuadengr@yahoo.com\",\r\n    \"password\": \"Hellohello\",\r\n    \"username\": \"user6\",\r\n    \"firstname\": \"first\",\r\n    \"lastname\": \"\",\r\n    \"company_id\": 1,\r\n    \"member_type\": 2\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"lastname must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"lastname must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-18.6 Register_company_admin_without_company_id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d40bb291-3268-47b7-a2d3-dc46d4962ea2",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"company id must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"company id must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"company id must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"Fuad@yahoo.com\",\r\n    \"password\": \"Hellohello\",\r\n    \"username\": \"Helloworld\",\r\n    \"firstname\": \"hello1\",\r\n    \"lastname\": \"hami\",\r\n    \"company_id\": \"\",\r\n    \"member_type\": \"2\"\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"register-dashboard-user"
									]
								},
								"description": "BRD: Techserve4u admin should be able to register company admin.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"company id\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"Fuadengr@yahoo.com\",\r\n    \"password\": \"Hellohello\",\r\n    \"username\": \"user6\",\r\n    \"firstname\": \"first\",\r\n    \"lastname\": \"lastuser\",\r\n    \"company_id\": \"\",\r\n    \"member_type\": 2\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"company id must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"company id must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-18.7 Register_company_admin_without_member_type",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e51aea6c-7021-4213-891e-84f9a36ba820",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= \r",
											"{\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"member_type must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"member_type must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"member_type must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"Fuad@yahoo.com\",\r\n    \"password\": \"Hellohello\",\r\n    \"username\": \"Helloworld\",\r\n    \"firstname\": \"feeeo\",\r\n    \"lastname\": \"lastuser\",\r\n    \"company_id\": 1,\r\n    \"member_type\": \"\"\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"register-dashboard-user"
									]
								},
								"description": "BRD: Techserve4u admin should be able to register company admin.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"member type\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"Fuadengr@yahoo.com\",\r\n    \"password\": \"Hellohello\",\r\n    \"username\": \"user6\",\r\n    \"firstname\": \"first\",\r\n    \"lastname\": \"lastuser\",\r\n    \"company_id\": 1,\r\n    \"member_type\": \"\"\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"member_type must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"member_type must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-18.8 Register_company_admin_without_email_password",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e768fe21-5fce-4339-9e1f-1a9f98795ece",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"email must be non-empty\",\r",
											"                \"password must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"email must be non-empty\",\r",
											"                    \"password must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"email must be non-empty\",\r",
											"                            \"password must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"\",\r\n    \"password\": \"\",\r\n    \"username\": \"Helloworld\",\r\n    \"firstname\": \"hello01\",\r\n    \"lastname\": \"lastuser\",\r\n    \"company_id\": 1,\r\n    \"member_type\": 2\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"register-dashboard-user"
									]
								},
								"description": "BRD: Techserve4u admin should be able to register company admin.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"email and password\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"\",\r\n    \"password\": \"\",\r\n    \"username\": \"user6\",\r\n    \"firstname\": \"first\",\r\n    \"lastname\": \"lastuser\",\r\n    \"company_id\": 1,\r\n    \"member_type\": 2\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"email must be non-empty\",\r\n        \"password must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"email must be non-empty\",\r\n        \"password must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-18.9 Register_company_admin_without_email_and_username",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4802c9a3-9895-4457-b3b0-395c36452d6b",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"email must be non-empty\",\r",
											"                \"username must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"email must be non-empty\",\r",
											"                    \"username must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"email must be non-empty\",\r",
											"                            \"username must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"\",\r\n    \"password\": \"Hellohello\",\r\n    \"username\": \"\",\r\n    \"firstname\": \"first\",\r\n    \"lastname\": \"lastuser\",\r\n    \"company_id\": 1,\r\n    \"member_type\": 2\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"register-dashboard-user"
									]
								},
								"description": "BRD: Techserve4u admin should be able to register company admin.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"email and username\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"\",\r\n    \"password\": \"Hellohello\",\r\n    \"username\": \"\",\r\n    \"firstname\": \"first\",\r\n    \"lastname\": \"lastuser\",\r\n    \"company_id\": 1,\r\n    \"member_type\": 2\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"email must be non-empty\",\r\n        \"username must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"email must be non-empty\",\r\n        \"username must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-18.10 Register_company_admin_without_email_firstname",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7df6cae1-97c9-4b29-a1b7-9b6ad78801b5",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"email must be non-empty\",\r",
											"                \"firstname must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"email must be non-empty\",\r",
											"                    \"firstname must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"email must be non-empty\",\r",
											"                            \"firstname must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"\",\r\n    \"password\": \"20012001\",\r\n    \"username\": \"Helloworld\",\r\n    \"firstname\": \"\",\r\n    \"lastname\": \"ahmed\",\r\n    \"company_id\": 1,\r\n    \"member_type\": 2\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"register-dashboard-user"
									]
								},
								"description": "BRD: Techserve4u admin should be able to register company admin.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"email and firstname\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"\",\r\n    \"password\": \"20012001\",\r\n    \"username\": \"Helloworld\",\r\n    \"firstname\": \"\",\r\n    \"lastname\": \"ahmed\",\r\n    \"company_id\": 1,\r\n    \"member_type\": 2\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"email must be non-empty\",\r\n        \"firstname must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"email must be non-empty\",\r\n        \"firstname must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-18.11 Register_company_admin_without_email_lastname",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5a94604b-5e58-4d41-aeba-b008c228308f",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"email must be non-empty\",\r",
											"                \"lastname must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"email must be non-empty\",\r",
											"                    \"lastname must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"email must be non-empty\",\r",
											"                            \"lastname must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"\",\r\n    \"password\": \"20012001\",\r\n    \"username\": \"Helloworld\",\r\n    \"firstname\": \"Fuad\",\r\n    \"lastname\": \"\",\r\n    \"company_id\": 1,\r\n    \"member_type\": 2\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"register-dashboard-user"
									]
								},
								"description": "BRD: Techserve4u admin should be able to register company admin.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"email and lastname\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"\",\r\n    \"password\": \"20012001\",\r\n    \"username\": \"Helloworld\",\r\n    \"firstname\": \"Fuad\",\r\n    \"lastname\": \"\",\r\n    \"company_id\": 1,\r\n    \"member_type\": 2\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"email must be non-empty\",\r\n        \"lastname must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"email must be non-empty\",\r\n        \"lastname must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-18.12 Register_company_admin_without_email_and_company_id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ef6e773e-7030-4a52-a1e6-6f1feda3229c",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= \r",
											"{\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"email must be non-empty\",\r",
											"                \"company id must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"email must be non-empty\",\r",
											"                    \"company id must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"email must be non-empty\",\r",
											"                            \"company id must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"\",\r\n    \"password\": \"20012001\",\r\n    \"username\": \"Helloworld\",\r\n    \"firstname\": \"Fuad\",\r\n    \"lastname\": \"Ahmed\",\r\n    \"company_id\": \"\",\r\n    \"member_type\": 2\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"register-dashboard-user"
									]
								},
								"description": "BRD: Techserve4u admin should be able to register company admin.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"email and company id\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"\",\r\n    \"password\": \"20012001\",\r\n    \"username\": \"Helloworld\",\r\n    \"firstname\": \"Fuad\",\r\n    \"lastname\": \"Ahmed\",\r\n    \"company_id\": \"\",\r\n    \"member_type\": 2\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"email must be non-empty\",\r\n        \"company id must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"email must be non-empty\",\r\n        \"company id must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-18.13 Register_company_admin_without_email_and_member_type",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6a5da32e-347b-4b54-b139-8f45c791c8a3",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= \r",
											"{\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"email must be non-empty\",\r",
											"                \"member_type must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"email must be non-empty\",\r",
											"                    \"member_type must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"email must be non-empty\",\r",
											"                            \"member_type must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"\",\r\n    \"password\": \"20012001\",\r\n    \"username\": \"Helloworld\",\r\n    \"firstname\": \"Fuad\",\r\n    \"lastname\": \"Ahmed\",\r\n    \"company_id\": \"1\",\r\n    \"member_type\": \"\"\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"register-dashboard-user"
									]
								},
								"description": "BRD: Techserve4u admin should be able to register company admin.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"email and member type\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"\",\r\n    \"password\": \"20012001\",\r\n    \"username\": \"Helloworld\",\r\n    \"firstname\": \"Fuad\",\r\n    \"lastname\": \"Ahmed\",\r\n    \"company_id\": \"1\",\r\n    \"member_type\": \"\"\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"email must be non-empty\",\r\n        \"member_type must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"email must be non-empty\",\r\n        \"member_type must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-18.14 Register_company_admin_without_username_password",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "88f771fc-dbf8-4a55-adcb-717e60c1cb08",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"password must be non-empty\",\r",
											"                \"username must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"password must be non-empty\",\r",
											"                    \"username must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"password must be non-empty\",\r",
											"                            \"username must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"Fuad@yahoo.com\",\r\n    \"password\": \"\",\r\n    \"username\": \"\",\r\n    \"firstname\": \"Hello\",\r\n    \"lastname\": \"world\",\r\n    \"company_id\": 1,\r\n    \"member_type\": 2\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"register-dashboard-user"
									]
								},
								"description": "BRD: Techserve4u admin should be able to register company admin.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"password and username\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"Fuad@yahoo.com\",\r\n    \"password\": \"\",\r\n    \"username\": \"\",\r\n    \"firstname\": \"Hello\",\r\n    \"lastname\": \"world\",\r\n    \"company_id\": 1,\r\n    \"member_type\": 2\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"password must be non-empty\",\r\n        \"username must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"password must be non-empty\",\r\n        \"username must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-18.15 Register_compnay_admin_without_password_firstname",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "27ae1cd0-8079-4e0a-ae99-57e2b9807fb2",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"password must be non-empty\",\r",
											"                \"firstname must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"password must be non-empty\",\r",
											"                    \"firstname must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"password must be non-empty\",\r",
											"                            \"firstname must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"Fuad@yahoo.com\",\r\n    \"password\": \"\",\r\n    \"username\": \"Helloworld\",\r\n    \"firstname\": \"\",\r\n    \"lastname\": \"lastuser\",\r\n    \"company_id\": 1,\r\n    \"member_type\": 2\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"register-dashboard-user"
									]
								},
								"description": "BRD: Techserve4u admin should be able to register company admin.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"password and firstname\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"Fuad@yahoo.com\",\r\n    \"password\": \"\",\r\n    \"username\": \"Helloworld\",\r\n    \"firstname\": \"\",\r\n    \"lastname\": \"lastuser\",\r\n    \"company_id\": 1,\r\n    \"member_type\": 2\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"password must be non-empty\",\r\n        \"firstname must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"password must be non-empty\",\r\n        \"firstname must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-18.16 Register_compnay_admin_without_password_lastname",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6e9fae72-ba02-48ae-ae5e-c69e0a21c736",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"password must be non-empty\",\r",
											"                \"lastname must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"password must be non-empty\",\r",
											"                    \"lastname must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"password must be non-empty\",\r",
											"                            \"lastname must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"Fuad@yahoo.com\",\r\n    \"password\": \"\",\r\n    \"username\": \"Helloworld\",\r\n    \"firstname\": \"Hello\",\r\n    \"lastname\": \"\",\r\n    \"company_id\": 1,\r\n    \"member_type\": 2\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"register-dashboard-user"
									]
								},
								"description": "BRD: Techserve4u admin should be able to register company admin.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"password and lastname\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"Fuad@yahoo.com\",\r\n    \"password\": \"\",\r\n    \"username\": \"Helloworld\",\r\n    \"firstname\": \"Hello\",\r\n    \"lastname\": \"\",\r\n    \"company_id\": 1,\r\n    \"member_type\": 2\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"password must be non-empty\",\r\n        \"lastname must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"password must be non-empty\",\r\n        \"lastname must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-18.17 Register_company_admin_without_password_and_company_id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "030fa521-a670-4a29-a228-04d69642b5a2",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= \r",
											"{\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"password must be non-empty\",\r",
											"                \"company id must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"password must be non-empty\",\r",
											"                    \"company id must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"password must be non-empty\",\r",
											"                            \"company id must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"Fuad@yahoo.com\",\r\n    \"password\": \"\",\r\n    \"username\": \"Helloworld\",\r\n    \"firstname\": \"Fuad\",\r\n    \"lastname\": \"Ahmed\",\r\n    \"company_id\": \"\",\r\n    \"member_type\": 2\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"register-dashboard-user"
									]
								},
								"description": "BRD: Techserve4u admin should be able to register company admin.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"password and company id\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"Fuad@yahoo.com\",\r\n    \"password\": \"\",\r\n    \"username\": \"Helloworld\",\r\n    \"firstname\": \"Fuad\",\r\n    \"lastname\": \"Ahmed\",\r\n    \"company_id\": \"\",\r\n    \"member_type\": 2\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"password must be non-empty\",\r\n        \"company id must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"password must be non-empty\",\r\n        \"company id must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-18.18 Register_company_admin_without_password_and_member_type",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "15262a0b-5c59-49f3-bb65-2f15d09dc343",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"password must be non-empty\",\r",
											"                \"member_type must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"password must be non-empty\",\r",
											"                    \"member_type must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"password must be non-empty\",\r",
											"                            \"member_type must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"Fuad@yahoo.com\",\r\n    \"password\": \"\",\r\n    \"username\": \"Helloworld\",\r\n    \"firstname\": \"Fuad\",\r\n    \"lastname\": \"Ahmed\",\r\n    \"company_id\": 1,\r\n    \"member_type\": \"\"\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"register-dashboard-user"
									]
								},
								"description": "BRD: Techserve4u admin should be able to register company admin.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"password and member_type\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"Fuad@yahoo.com\",\r\n    \"password\": \"\",\r\n    \"username\": \"Helloworld\",\r\n    \"firstname\": \"Fuad\",\r\n    \"lastname\": \"Ahmed\",\r\n    \"company_id\": 1,\r\n    \"member_type\": \"\"\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"password must be non-empty\",\r\n        \"member_type must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"password must be non-empty\",\r\n        \"member_type must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-18.19 Register_company_admin_without_username_firstname",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3870f670-78ea-4bbb-b917-82ed476257e4",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"username must be non-empty\",\r",
											"                \"firstname must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"username must be non-empty\",\r",
											"                    \"firstname must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"username must be non-empty\",\r",
											"                            \"firstname must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"fuad@yahoo.com\",\r\n    \"password\": \"hellohello\",\r\n    \"username\": \"\",\r\n    \"firstname\": \"\",\r\n    \"lastname\": \"hello01\",\r\n    \"company_id\": 1,\r\n    \"member_type\": 2\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"register-dashboard-user"
									]
								},
								"description": "BRD: Techserve4u admin should be able to register company admin.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"username and firstname\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"fuad@yahoo.com\",\r\n    \"password\": \"hellohello\",\r\n    \"username\": \"\",\r\n    \"firstname\": \"\",\r\n    \"lastname\": \"hello01\",\r\n    \"company_id\": 1,\r\n    \"member_type\": 2\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"username must be non-empty\",\r\n        \"firstname must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"username must be non-empty\",\r\n        \"firstname must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-18.20 Register_company_admin_without_username_lastname",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "87fb8653-cdf3-4e28-8912-499179ac6c68",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"username must be non-empty\",\r",
											"                \"lastname must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"username must be non-empty\",\r",
											"                    \"lastname must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"username must be non-empty\",\r",
											"                            \"lastname must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"fuad@yahoo.com\",\r\n    \"password\": \"hellohello\",\r\n    \"username\": \"\",\r\n    \"firstname\": \"hello01\",\r\n    \"lastname\": \"\",\r\n    \"company_id\": 1,\r\n    \"member_type\": 2\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"register-dashboard-user"
									]
								},
								"description": "BRD: Techserve4u admin should be able to register company admin.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"username and lastname\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"fuad@yahoo.com\",\r\n    \"password\": \"hellohello\",\r\n    \"username\": \"\",\r\n    \"firstname\": \"hello01\",\r\n    \"lastname\": \"\",\r\n    \"company_id\": 1,\r\n    \"member_type\": 2\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"username must be non-empty\",\r\n        \"lastname must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"username must be non-empty\",\r\n        \"lastname must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-18.21 Register_company_admin_without_username_and_company_id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fff8fd68-331f-4e66-b042-f4c3ea908ec0",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"username must be non-empty\",\r",
											"                \"company id must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"username must be non-empty\",\r",
											"                    \"company id must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"username must be non-empty\",\r",
											"                            \"company id must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"fuad@yahoo.com\",\r\n    \"password\": \"hellohello\",\r\n    \"username\": \"\",\r\n    \"firstname\": \"hello01\",\r\n    \"lastname\": \"frf\",\r\n    \"company_id\": \"\",\r\n    \"member_type\": 2\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"register-dashboard-user"
									]
								},
								"description": "BRD: Techserve4u admin should be able to register company admin.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"username and company id\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"fuad@yahoo.com\",\r\n    \"password\": \"hellohello\",\r\n    \"username\": \"\",\r\n    \"firstname\": \"hello01\",\r\n    \"lastname\": \"frf\",\r\n    \"company_id\": \"\",\r\n    \"member_type\": 2\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"username must be non-empty\",\r\n        \"company id must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"username must be non-empty\",\r\n        \"company id must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-18.22 Register_company_admin_without_username_and_member_type",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0e48f226-108e-4b13-9c1a-8fcea5245c79",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"username must be non-empty\",\r",
											"                \"member_type must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"username must be non-empty\",\r",
											"                    \"member_type must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"username must be non-empty\",\r",
											"                            \"member_type must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"fuad@yahoo.com\",\r\n    \"password\": \"hellohello\",\r\n    \"username\": \"\",\r\n    \"firstname\": \"hello01\",\r\n    \"lastname\": \"frf\",\r\n    \"company_id\": 2,\r\n    \"member_type\": \"\"\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"register-dashboard-user"
									]
								},
								"description": "BRD: Techserve4u admin should be able to register company admin.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"username and member type\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"fuad@yahoo.com\",\r\n    \"password\": \"hellohello\",\r\n    \"username\": \"\",\r\n    \"firstname\": \"hello01\",\r\n    \"lastname\": \"frf\",\r\n    \"company_id\": 2,\r\n    \"member_type\": \"\"\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"username must be non-empty\",\r\n        \"member_type must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"username must be non-empty\",\r\n        \"member_type must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-18.23 Register_company_admin_without_firstname_lastname",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "64be03ec-d270-4989-a4fc-792b225fdfe8",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"firstname must be non-empty\",\r",
											"                \"lastname must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"firstname must be non-empty\",\r",
											"                    \"lastname must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"firstname must be non-empty\",\r",
											"                            \"lastname must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"fuad@yahoo.com\",\r\n    \"password\": \"hellohello\",\r\n    \"username\": \"Helloworld\",\r\n    \"firstname\": \"\",\r\n    \"lastname\": \"\",\r\n    \"company_id\": 1,\r\n    \"member_type\": 2\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"register-dashboard-user"
									]
								}
							},
							"response": []
						},
						{
							"name": "FFME2-18.24 Register_company_admin_without_firstname_and_company_id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cbac1e84-fb9b-46fe-b412-e57a8a45ec07",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= \r",
											"{\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"firstname must be non-empty\",\r",
											"                \"company id must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"firstname must be non-empty\",\r",
											"                    \"company id must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"firstname must be non-empty\",\r",
											"                            \"company id must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"fuad@yahoo.com\",\r\n    \"password\": \"hellohello\",\r\n    \"username\": \"user01\",\r\n    \"firstname\": \"\",\r\n    \"lastname\": \"bingo\",\r\n    \"company_id\": \"\",\r\n    \"member_type\": 2\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"register-dashboard-user"
									]
								},
								"description": "BRD: Techserve4u admin should be able to register company admin.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"firstname and company id\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"fuad@yahoo.com\",\r\n    \"password\": \"hellohello\",\r\n    \"username\": \"user01\",\r\n    \"firstname\": \"\",\r\n    \"lastname\": \"bingo\",\r\n    \"company_id\": \"\",\r\n    \"member_type\": 2\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"firstname must be non-empty\",\r\n        \"company id must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"firstname must be non-empty\",\r\n        \"company id must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-18.25 Register_company_admin_without_firstname_and_member_type",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7a395be1-34f1-424d-9eae-dbda34b4c81c",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"firstname must be non-empty\",\r",
											"                \"member_type must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"firstname must be non-empty\",\r",
											"                    \"member_type must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"firstname must be non-empty\",\r",
											"                            \"member_type must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"fuad@yahoo.com\",\r\n    \"password\": \"hellohello\",\r\n    \"username\": \"user01\",\r\n    \"firstname\": \"\",\r\n    \"lastname\": \"bingo\",\r\n    \"company_id\": \"2\",\r\n    \"member_type\": \"\"\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"register-dashboard-user"
									]
								},
								"description": "BRD: Techserve4u admin should be able to register company admin.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"firstname and member type\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"fuad@yahoo.com\",\r\n    \"password\": \"hellohello\",\r\n    \"username\": \"user01\",\r\n    \"firstname\": \"\",\r\n    \"lastname\": \"bingo\",\r\n    \"company_id\": \"2\",\r\n    \"member_type\": \"\"\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"firstname must be non-empty\",\r\n        \"member_type must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"firstname must be non-empty\",\r\n        \"member_type must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-18.26 Register_company_admin_without_lastname_and_company_id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6677b1cd-98d1-4473-9fff-90ccf36ad54f",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"lastname must be non-empty\",\r",
											"                \"company id must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"lastname must be non-empty\",\r",
											"                    \"company id must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"lastname must be non-empty\",\r",
											"                            \"company id must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"fuad@yahoo.com\",\r\n    \"password\": \"hellohello\",\r\n    \"username\": \"user01\",\r\n    \"firstname\": \"abid\",\r\n    \"lastname\": \"\",\r\n    \"company_id\": \"\",\r\n    \"member_type\": \"1\"\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"register-dashboard-user"
									]
								},
								"description": "BRD: Techserve4u admin should be able to register company admin.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"company id and lastname\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"fuad@yahoo.com\",\r\n    \"password\": \"hellohello\",\r\n    \"username\": \"user01\",\r\n    \"firstname\": \"abid\",\r\n    \"lastname\": \"\",\r\n    \"company_id\": \"\",\r\n    \"member_type\": \"1\"\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"lastname must be non-empty\",\r\n        \"company id must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"lastname must be non-empty\",\r\n        \"company id must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-18.27 Register_company_admin_without_lastname_and_member_type",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b01fdcb2-5ef1-429e-ab05-2e00dfe937b2",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"lastname must be non-empty\",\r",
											"                \"member_type must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"lastname must be non-empty\",\r",
											"                    \"member_type must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"lastname must be non-empty\",\r",
											"                            \"member_type must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"fuad@yahoo.com\",\r\n    \"password\": \"hellohello\",\r\n    \"username\": \"user01\",\r\n    \"firstname\": \"bingo\",\r\n    \"lastname\": \"\",\r\n    \"company_id\": \"2\",\r\n    \"member_type\": \"\"\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"register-dashboard-user"
									]
								},
								"description": "BRD: Techserve4u admin should be able to register company admin.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"member type and lastname\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"fuad@yahoo.com\",\r\n    \"password\": \"hellohello\",\r\n    \"username\": \"user01\",\r\n    \"firstname\": \"bingo\",\r\n    \"lastname\": \"\",\r\n    \"company_id\": \"2\",\r\n    \"member_type\": \"\"\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"lastname must be non-empty\",\r\n        \"member_type must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"lastname must be non-empty\",\r\n        \"member_type must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-18.28 Register_company_admin_without_company_id_and_memberType",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cca40137-16f5-47b1-b4c6-7a19608e8e21",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"company id must be non-empty\",\r",
											"                \"member_type must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"company id must be non-empty\",\r",
											"                    \"member_type must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"company id must be non-empty\",\r",
											"                            \"member_type must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"Fuad@yahoo.com\",\r\n    \"password\": \"Hellohello\",\r\n    \"username\": \"Helloworld\",\r\n    \"firstname\": \"hello1\",\r\n    \"lastname\": \"hami\",\r\n    \"company_id\": \"\",\r\n    \"member_type\": \"\"\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"register-dashboard-user"
									]
								},
								"description": "BRD: Techserve4u admin should be able to register company admin.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"company id and member type\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"Fuad@yahoo.com\",\r\n    \"password\": \"Hellohello\",\r\n    \"username\": \"Helloworld\",\r\n    \"firstname\": \"hello1\",\r\n    \"lastname\": \"hami\",\r\n    \"company_id\": \"\",\r\n    \"member_type\": \"\"\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"company id must be non-empty\",\r\n        \"member_type must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"company id must be non-empty\",\r\n        \"member_type must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-18.29 Register_company_admin_without_any_data",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2e43b8b3-4cda-4c09-b2d5-b15f917eb697",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"email must be non-empty\",\r",
											"                \"password must be non-empty\",\r",
											"                \"firstname must be non-empty\",\r",
											"                \"lastname must be non-empty\",\r",
											"                \"company id must be non-empty\",\r",
											"                \"member_type must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"email must be non-empty\",\r",
											"                    \"password must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"email must be non-empty\",\r",
											"                            \"password must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\r\n   {\r\n    \"email\": \"\",\r\n    \"password\": \"\",\r\n    \"username\": \"1\",\r\n    \"firstname\": \"\",\r\n    \"lastname\": \"\",\r\n    \"company_id\": \"\",\r\n    \"member_type\": \"\"\r\n}\r\n"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"register-dashboard-user"
									]
								},
								"description": "BRD: Techserve4u admin should be able to register company admin.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"all the information\" empty.\r\n\r\nTest Data: \r\n\r\n   {\r\n    \"email\": \"\",\r\n    \"password\": \"\",\r\n    \"username\": \"1\",\r\n    \"firstname\": \"\",\r\n    \"lastname\": \"\",\r\n    \"company_id\": \"\",\r\n    \"member_type\": \"\"\r\n}\r\n\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"email must be non-empty\",\r\n        \"password must be non-empty\",\r\n        \"firstname must be non-empty\",\r\n        \"lastname must be non-empty\",\r\n        \"company id must be non-empty\",\r\n        \"member_type must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"email must be non-empty\",\r\n        \"password must be non-empty\",\r\n        \"firstname must be non-empty\",\r\n        \"lastname must be non-empty\",\r\n        \"company id must be non-empty\",\r\n        \"member_type must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-18.30 Register_company_admin_without_email_password_username",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "35be4d71-bd6d-4462-afff-5b6cdf9220fa",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= \r",
											"{\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"email must be non-empty\",\r",
											"                \"password must be non-empty\",\r",
											"                \"username must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"email must be non-empty\",\r",
											"                    \"password must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"email must be non-empty\",\r",
											"                            \"password must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"\",\r\n    \"password\": \"\",\r\n    \"username\": \"\",\r\n    \"firstname\": \"Fuad\",\r\n    \"lastname\": \"ahmed\",\r\n    \"company_id\": 1,\r\n    \"member_type\": 2\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"register-dashboard-user"
									]
								},
								"description": "BRD: Techserve4u admin should be able to register company admin.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"email password and username\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"\",\r\n    \"password\": \"\",\r\n    \"username\": \"\",\r\n    \"firstname\": \"Fuad\",\r\n    \"lastname\": \"ahmed\",\r\n    \"company_id\": 1,\r\n    \"member_type\": 2\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"email must be non-empty\",\r\n        \"password must be non-empty\",\r\n        \"username must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"email must be non-empty\",\r\n        \"password must be non-empty\",\r\n        \"username must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-18.31 Register_company_admin_without_email_and_password_and_firstname",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a5418153-dbe0-4794-a94d-d0ecd76e66d4",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"email must be non-empty\",\r",
											"                \"password must be non-empty\",\r",
											"                \"firstname must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"email must be non-empty\",\r",
											"                    \"password must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"email must be non-empty\",\r",
											"                            \"password must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"\",\r\n    \"password\": \"\",\r\n    \"username\": \"Helloworld\",\r\n    \"firstname\": \"\",\r\n    \"lastname\": \"lastuser\",\r\n    \"company_id\": 1,\r\n    \"member_type\": 2\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"register-dashboard-user"
									]
								},
								"description": "BRD: Techserve4u admin should be able to register company admin.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"email password and firstname\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"\",\r\n    \"password\": \"\",\r\n    \"username\": \"Helloworld\",\r\n    \"firstname\": \"\",\r\n    \"lastname\": \"lastuser\",\r\n    \"company_id\": 1,\r\n    \"member_type\": 2\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"email must be non-empty\",\r\n        \"password must be non-empty\",\r\n        \"firstname must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"email must be non-empty\",\r\n        \"password must be non-empty\",\r\n        \"firstname must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-18.32 Register_company_admin_without_email_password_and_lastname",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bccf017b-efe9-4f04-9020-6c80bae961a1",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"email must be non-empty\",\r",
											"                \"password must be non-empty\",\r",
											"                \"laststname must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"email must be non-empty\",\r",
											"                    \"password must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"email must be non-empty\",\r",
											"                            \"password must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"\",\r\n    \"password\": \"\",\r\n    \"username\": \"Helloworld\",\r\n    \"firstname\": \"Fuad\",\r\n    \"lastname\": \"\",\r\n    \"company_id\": 1,\r\n    \"member_type\": 2\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"register-dashboard-user"
									]
								},
								"description": "BRD: Techserve4u admin should be able to register company admin.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"email password and lastname\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"\",\r\n    \"password\": \"\",\r\n    \"username\": \"Helloworld\",\r\n    \"firstname\": \"Fuad\",\r\n    \"lastname\": \"\",\r\n    \"company_id\": 1,\r\n    \"member_type\": 2\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"email must be non-empty\",\r\n        \"password must be non-empty\",\r\n        \"lastname must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"email must be non-empty\",\r\n        \"password must be non-empty\",\r\n        \"lastname must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-18.33 Register_company_admin_without_email_password_company_id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "452de511-62da-473c-9528-31ba3fc2b7ab",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"email must be non-empty\",\r",
											"                \"password must be non-empty\",\r",
											"                \"company id must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"email must be non-empty\",\r",
											"                    \"password must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"email must be non-empty\",\r",
											"                            \"password must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"\",\r\n    \"password\": \"\",\r\n    \"username\": \"Helloworld\",\r\n    \"firstname\": \"Fuad\",\r\n    \"lastname\": \"ahmed\",\r\n    \"company_id\": \"\",\r\n    \"member_type\": 2\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"register-dashboard-user"
									]
								},
								"description": "BRD: Techserve4u admin should be able to register company admin.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"email password and company id\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"\",\r\n    \"password\": \"\",\r\n    \"username\": \"Helloworld\",\r\n    \"firstname\": \"Fuad\",\r\n    \"lastname\": \"ahmed\",\r\n    \"company_id\": \"\",\r\n    \"member_type\": 2\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"email must be non-empty\",\r\n        \"password must be non-empty\",\r\n        \"company id must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"email must be non-empty\",\r\n        \"password must be non-empty\",\r\n        \"company id must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-18.34 Register_company_admin_without_email_password_member_type",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "124cbda4-5be3-4970-b72b-df07548a81c3",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= \r",
											"{\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"email must be non-empty\",\r",
											"                \"password must be non-empty\",\r",
											"                \"member_type must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"email must be non-empty\",\r",
											"                    \"password must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"email must be non-empty\",\r",
											"                            \"password must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"\",\r\n    \"password\": \"\",\r\n    \"username\": \"Helloworld\",\r\n    \"firstname\": \"Fuad\",\r\n    \"lastname\": \"ahmed\",\r\n    \"company_id\": 1,\r\n    \"member_type\": \"\"\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"register-dashboard-user"
									]
								},
								"description": "BRD: Techserve4u admin should be able to register company admin.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"email password and member type\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"\",\r\n    \"password\": \"\",\r\n    \"username\": \"Helloworld\",\r\n    \"firstname\": \"Fuad\",\r\n    \"lastname\": \"ahmed\",\r\n    \"company_id\": 1,\r\n    \"member_type\": \"\"\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"email must be non-empty\",\r\n        \"password must be non-empty\",\r\n        \"member_type must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"email must be non-empty\",\r\n        \"password must be non-empty\",\r\n        \"member_type must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-18.35 Register_company_admin_without_password_username_firstname",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b03b812e-faca-4cae-bebe-74033701827e",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= \r",
											"{\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"password must be non-empty\",\r",
											"                \"username must be non-empty\",\r",
											"                \"firstname must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"password must be non-empty\",\r",
											"                    \"username must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"password must be non-empty\",\r",
											"                            \"username must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"Fuad@yahoo.com\",\r\n    \"password\": \"\",\r\n    \"username\": \"\",\r\n    \"firstname\": \"\",\r\n    \"lastname\": \"hami\",\r\n    \"company_id\": \"2\",\r\n    \"member_type\": 1\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"register-dashboard-user"
									]
								},
								"description": "BRD: Techserve4u admin should be able to register company admin.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"password username and firstname\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"Fuad@yahoo.com\",\r\n    \"password\": \"\",\r\n    \"username\": \"\",\r\n    \"firstname\": \"\",\r\n    \"lastname\": \"hami\",\r\n    \"company_id\": \"2\",\r\n    \"member_type\": 1\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"password must be non-empty\",\r\n        \"username must be non-empty\",\r\n        \"firstname must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"password must be non-empty\",\r\n        \"username must be non-empty\",\r\n        \"firstname must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-18.36 Register_company_admin_without_password_username_lastname",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "91a27ffc-c636-4c63-b68d-19ae9e287f08",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"password must be non-empty\",\r",
											"                \"username must be non-empty\",\r",
											"                \"lastname must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"password must be non-empty\",\r",
											"                    \"username must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"password must be non-empty\",\r",
											"                            \"username must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"Fuad@yahoo.com\",\r\n    \"password\": \"\",\r\n    \"username\": \"\",\r\n    \"firstname\": \"asa\",\r\n    \"lastname\": \"\",\r\n    \"company_id\": \"2\",\r\n    \"member_type\": 1\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"register-dashboard-user"
									]
								},
								"description": "BRD: Techserve4u admin should be able to register company admin.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"password username and lastname\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"Fuad@yahoo.com\",\r\n    \"password\": \"\",\r\n    \"username\": \"\",\r\n    \"firstname\": \"asa\",\r\n    \"lastname\": \"\",\r\n    \"company_id\": \"2\",\r\n    \"member_type\": 1\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"password must be non-empty\",\r\n        \"username must be non-empty\",\r\n        \"lastname must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"password must be non-empty\",\r\n        \"username must be non-empty\",\r\n        \"lastname must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-18.37 Register_company_admin_without_password_username_company_id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "89b2944c-d5a9-41ae-8d1d-8bd5799f355b",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"password must be non-empty\",\r",
											"                \"username must be non-empty\",\r",
											"                \"company id must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"password must be non-empty\",\r",
											"                    \"username must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"password must be non-empty\",\r",
											"                            \"username must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"Fuad@yahoo.com\",\r\n    \"password\": \"\",\r\n    \"username\": \"\",\r\n    \"firstname\": \"asa\",\r\n    \"lastname\": \"sa\",\r\n    \"company_id\": \"\",\r\n    \"member_type\": 1\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"register-dashboard-user"
									]
								},
								"description": "BRD: Techserve4u admin should be able to register company admin.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"password username and company id\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"Fuad@yahoo.com\",\r\n    \"password\": \"\",\r\n    \"username\": \"\",\r\n    \"firstname\": \"asa\",\r\n    \"lastname\": \"sa\",\r\n    \"company_id\": \"\",\r\n    \"member_type\": 1\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"password must be non-empty\",\r\n        \"username must be non-empty\",\r\n        \"company id must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"password must be non-empty\",\r\n        \"username must be non-empty\",\r\n        \"company id must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-18.38 Register_company_admin_without_password_username_member_type",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5b25b0d7-efb2-43f1-a653-beea0116715a",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"password must be non-empty\",\r",
											"                \"username must be non-empty\",\r",
											"                \"member_type must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"password must be non-empty\",\r",
											"                    \"username must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"password must be non-empty\",\r",
											"                            \"username must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"Fuad@yahoo.com\",\r\n    \"password\": \"\",\r\n    \"username\": \"\",\r\n    \"firstname\": \"asa\",\r\n    \"lastname\": \"sas\",\r\n    \"company_id\": \"2\",\r\n    \"member_type\": \"\"\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"register-dashboard-user"
									]
								},
								"description": "\r\nBRD: Techserve4u admin should be able to register company admin.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"password username and member type\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"Fuad@yahoo.com\",\r\n    \"password\": \"\",\r\n    \"username\": \"\",\r\n    \"firstname\": \"asa\",\r\n    \"lastname\": \"sas\",\r\n    \"company_id\": \"2\",\r\n    \"member_type\": \"\"\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"password must be non-empty\",\r\n        \"username must be non-empty\",\r\n        \"member_type must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"password must be non-empty\",\r\n        \"username must be non-empty\",\r\n        \"member_type must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-18.39 Register_company_admin_without_username_firstname_lastname",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "320b53f0-45b4-4287-9ca3-6ef52703ff6c",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"username must be non-empty\",\r",
											"                \"firstname must be non-empty\",\r",
											"                \"lastname must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"username must be non-empty\",\r",
											"                    \"firstname must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"username must be non-empty\",\r",
											"                            \"firstname must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"Fuad@yahoo.com\",\r\n    \"password\": \"54325\",\r\n    \"username\": \"\",\r\n    \"firstname\": \"\",\r\n    \"lastname\": \"\",\r\n    \"company_id\": \"2\",\r\n    \"member_type\": 1\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"register-dashboard-user"
									]
								},
								"description": "BRD: Techserve4u admin should be able to register company admin.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"username firstname  and lastname\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"Fuad@yahoo.com\",\r\n    \"password\": \"54325\",\r\n    \"username\": \"\",\r\n    \"firstname\": \"\",\r\n    \"lastname\": \"\",\r\n    \"company_id\": \"2\",\r\n    \"member_type\": 1\r\n}\r\nExpected Result: \r\n{\r\n    \"message\": [\r\n        \"username must be non-empty\",\r\n        \"firstname must be non-empty\",\r\n        \"lastname must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"username must be non-empty\",\r\n        \"firstname must be non-empty\",\r\n        \"lastname must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-18.40 Register_company_admin_without_username_firstname_company_id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3e8d2a0f-67f7-458f-bb5e-f69f03221d9e",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"username must be non-empty\",\r",
											"                \"firstname must be non-empty\",\r",
											"                \"company id must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"username must be non-empty\",\r",
											"                    \"firstname must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"username must be non-empty\",\r",
											"                            \"firstname must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"Fuad@yahoo.com\",\r\n    \"password\": \"54325\",\r\n    \"username\": \"\",\r\n    \"firstname\": \"\",\r\n    \"lastname\": \"fs\",\r\n    \"company_id\": \"\",\r\n    \"member_type\": 1\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"register-dashboard-user"
									]
								},
								"description": "BRD: Techserve4u admin should be able to register company admin.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"username firstname and company id\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"Fuad@yahoo.com\",\r\n    \"password\": \"54325\",\r\n    \"username\": \"\",\r\n    \"firstname\": \"\",\r\n    \"lastname\": \"fs\",\r\n    \"company_id\": \"\",\r\n    \"member_type\": 1\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"username must be non-empty\",\r\n        \"firstname must be non-empty\",\r\n        \"company id must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"username must be non-empty\",\r\n        \"firstname must be non-empty\",\r\n        \"company id must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-18.41 Register_company_admin_without_username_firstname_member_type",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "75f50f5d-d1d0-433c-9af8-33841c821e6f",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"username must be non-empty\",\r",
											"                \"firstname must be non-empty\",\r",
											"                \"member_type must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"username must be non-empty\",\r",
											"                    \"firstname must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"username must be non-empty\",\r",
											"                            \"firstname must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"Fuad@yahoo.com\",\r\n    \"password\": \"54325\",\r\n    \"username\": \"\",\r\n    \"firstname\": \"\",\r\n    \"lastname\": \"fs\",\r\n    \"company_id\": \"1\",\r\n    \"member_type\": \"\"\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"register-dashboard-user"
									]
								},
								"description": "BRD: Techserve4u admin should be able to register company admin.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"username firstname and member type\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"Fuad@yahoo.com\",\r\n    \"password\": \"54325\",\r\n    \"username\": \"\",\r\n    \"firstname\": \"\",\r\n    \"lastname\": \"fs\",\r\n    \"company_id\": \"1\",\r\n    \"member_type\": \"\"\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"username must be non-empty\",\r\n        \"firstname must be non-empty\",\r\n        \"member_type must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"username must be non-empty\",\r\n        \"firstname must be non-empty\",\r\n        \"member_type must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-18.42 Register_company_admin_without_firstname_lastname_company_id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e1ac110c-096a-4a3a-ba92-567377654e56",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= \r",
											"{\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"firstname must be non-empty\",\r",
											"                \"lastname must be non-empty\",\r",
											"                \"company id must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"firstname must be non-empty\",\r",
											"                    \"lastname must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"firstname must be non-empty\",\r",
											"                            \"lastname must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"Fuad@yahoo.com\",\r\n    \"password\": \"54325\",\r\n    \"username\": \"ds3\",\r\n    \"firstname\": \"\",\r\n    \"lastname\": \"\",\r\n    \"company_id\": \"\",\r\n    \"member_type\": 1\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"register-dashboard-user"
									]
								},
								"description": "BRD: Techserve4u admin should be able to register company admin.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"firstname lastname and company id\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"Fuad@yahoo.com\",\r\n    \"password\": \"54325\",\r\n    \"username\": \"ds3\",\r\n    \"firstname\": \"\",\r\n    \"lastname\": \"\",\r\n    \"company_id\": \"\",\r\n    \"member_type\": 1\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"firstname must be non-empty\",\r\n        \"lastname must be non-empty\",\r\n        \"company id must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"firstname must be non-empty\",\r\n        \"lastname must be non-empty\",\r\n        \"company id must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-18.43 Register_company_admin_without_firstname_lastname_member_type",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cadaf69b-daf7-4468-98b8-3f90ed1c21fe",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= \r",
											"{\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"firstname must be non-empty\",\r",
											"                \"lastname must be non-empty\",\r",
											"                \"member_type must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"firstname must be non-empty\",\r",
											"                    \"lastname must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"firstname must be non-empty\",\r",
											"                            \"lastname must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"Fuad@yahoo.com\",\r\n    \"password\": \"54325\",\r\n    \"username\": \"dfs4\",\r\n    \"firstname\": \"\",\r\n    \"lastname\": \"\",\r\n    \"company_id\": 1,\r\n    \"member_type\": \"\"\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"register-dashboard-user"
									]
								},
								"description": "BRD: Techserve4u admin should be able to register company admin.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"firstname lastname and member type\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"Fuad@yahoo.com\",\r\n    \"password\": \"54325\",\r\n    \"username\": \"dfs4\",\r\n    \"firstname\": \"\",\r\n    \"lastname\": \"\",\r\n    \"company_id\": 1,\r\n    \"member_type\": \"\"\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"firstname must be non-empty\",\r\n        \"lastname must be non-empty\",\r\n        \"member_type must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"firstname must be non-empty\",\r\n        \"lastname must be non-empty\",\r\n        \"member_type must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-18.44 Register_company_admin_without_lastname_company_id_member_type",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0f03e679-2f3d-4486-854c-2edcbb4ae03f",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"lastname must be non-empty\",\r",
											"                \"company id must be non-empty\",\r",
											"                \"member_type must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"lastname must be non-empty\",\r",
											"                    \"company id must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"lastname must be non-empty\",\r",
											"                            \"company id must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"Fuad@yahoo.com\",\r\n    \"password\": \"54325\",\r\n    \"username\": \"wdq\",\r\n    \"firstname\": \"dwq\",\r\n    \"lastname\": \"\",\r\n    \"company_id\": \"\",\r\n    \"member_type\": \"\"\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"register-dashboard-user"
									]
								},
								"description": "BRD: Techserve4u admin should be able to register company admin.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"lastname company id and member type\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"Fuad@yahoo.com\",\r\n    \"password\": \"54325\",\r\n    \"username\": \"wdq\",\r\n    \"firstname\": \"dwq\",\r\n    \"lastname\": \"\",\r\n    \"company_id\": \"\",\r\n    \"member_type\": \"\"\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"lastname must be non-empty\",\r\n        \"company id must be non-empty\",\r\n        \"member_type must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n{\r\n    \"message\": [\r\n        \"lastname must be non-empty\",\r\n        \"company id must be non-empty\",\r\n        \"member_type must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-18.45 Register_company_admin_without_email_password_username_firstname_lastname",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c56eac06-4db2-4800-bd28-b48b687f4061",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"email must be non-empty\",\r",
											"                \"password must be non-empty\",\r",
											"                \"username must be non-empty\",\r",
											"                \"firstname must be non-empty\",\r",
											"                \"lastname must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"email must be non-empty\",\r",
											"                    \"password must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"email must be non-empty\",\r",
											"                            \"password must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"\",\r\n    \"password\": \"\",\r\n    \"username\": \"\",\r\n    \"firstname\": \"\",\r\n    \"lastname\": \"\",\r\n    \"company_id\": 1,\r\n    \"member_type\":1\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"register-dashboard-user"
									]
								},
								"description": "BRD: Techserve4u admin should be able to register company admin.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"email password username firstname and lastname\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"\",\r\n    \"password\": \"\",\r\n    \"username\": \"\",\r\n    \"firstname\": \"\",\r\n    \"lastname\": \"\",\r\n    \"company_id\": 1,\r\n    \"member_type\":1\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"email must be non-empty\",\r\n        \"password must be non-empty\",\r\n        \"username must be non-empty\",\r\n        \"firstname must be non-empty\",\r\n        \"lastname must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"email must be non-empty\",\r\n        \"password must be non-empty\",\r\n        \"username must be non-empty\",\r\n        \"firstname must be non-empty\",\r\n        \"lastname must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-18.46 Register_company_admin_without_email_password_username_firstname",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e5d0edeb-09fe-418e-b482-7ee5bc65c166",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"email must be non-empty\",\r",
											"                \"password must be non-empty\",\r",
											"                \"username must be non-empty\",\r",
											"                \"firstname must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"email must be non-empty\",\r",
											"                    \"password must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"email must be non-empty\",\r",
											"                            \"password must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"\",\r\n    \"password\": \"\",\r\n    \"username\": \"\",\r\n    \"firstname\": \"\",\r\n    \"lastname\": \"ahmed\",\r\n    \"company_id\": 1,\r\n    \"member_type\": 2\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"register-dashboard-user"
									]
								},
								"description": "BRD: Techserve4u admin should be able to register company admin.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"email password username and firstname\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"\",\r\n    \"password\": \"\",\r\n    \"username\": \"\",\r\n    \"firstname\": \"\",\r\n    \"lastname\": \"ahmed\",\r\n    \"company_id\": 1,\r\n    \"member_type\": 2\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"email must be non-empty\",\r\n        \"password must be non-empty\",\r\n        \"username must be non-empty\",\r\n        \"firstname must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"email must be non-empty\",\r\n        \"password must be non-empty\",\r\n        \"username must be non-empty\",\r\n        \"firstname must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-18.47 Register_company_admin_without_email_password_username_lastname",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b0a06a41-9990-489a-bef3-3651e0742788",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= \r",
											"{\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"email must be non-empty\",\r",
											"                \"password must be non-empty\",\r",
											"                \"username must be non-empty\",\r",
											"                \"lastname must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"email must be non-empty\",\r",
											"                    \"password must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"email must be non-empty\",\r",
											"                            \"password must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"\",\r\n    \"password\": \"\",\r\n    \"username\": \"\",\r\n    \"firstname\": \"fuad\",\r\n    \"lastname\": \"\",\r\n    \"company_id\": 1,\r\n    \"member_type\": 2\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"register-dashboard-user"
									]
								},
								"description": "BRD: Techserve4u admin should be able to register company admin.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"email password username and lastname\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"\",\r\n    \"password\": \"\",\r\n    \"username\": \"\",\r\n    \"firstname\": \"fuad\",\r\n    \"lastname\": \"\",\r\n    \"company_id\": 1,\r\n    \"member_type\": 2\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"email must be non-empty\",\r\n        \"password must be non-empty\",\r\n        \"username must be non-empty\",\r\n        \"lastname must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"email must be non-empty\",\r\n        \"password must be non-empty\",\r\n        \"username must be non-empty\",\r\n        \"lastname must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-18.48 Register_company_admin_without_password_username_firstname_lastname",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "163bc21b-d947-4984-8a0d-66281e9cf503",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"password must be non-empty\",\r",
											"                \"username must be non-empty\",\r",
											"                \"firstname must be non-empty\",\r",
											"                \"lastname must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"password must be non-empty\",\r",
											"                    \"username must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"password must be non-empty\",\r",
											"                            \"username must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"Fuad@yahoo.com\",\r\n    \"password\": \"\",\r\n    \"username\": \"\",\r\n    \"firstname\": \"\",\r\n    \"lastname\": \"\",\r\n    \"company_id\": 1,\r\n    \"member_type\": 2\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-dashboard-user",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"register-dashboard-user"
									]
								},
								"description": "\r\nBRD: Techserve4u admin should be able to register company admin.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"password username firstname and lastname\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"Fuad@yahoo.com\",\r\n    \"password\": \"\",\r\n    \"username\": \"\",\r\n    \"firstname\": \"\",\r\n    \"lastname\": \"\",\r\n    \"company_id\": 1,\r\n    \"member_type\": 2\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"password must be non-empty\",\r\n        \"username must be non-empty\",\r\n        \"firstname must be non-empty\",\r\n        \"lastname must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"password must be non-empty\",\r\n        \"username must be non-empty\",\r\n        \"firstname must be non-empty\",\r\n        \"lastname must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "FFME2-16 Company_admin_login",
					"item": [
						{
							"name": "FFME2-16.1 Company_admin_login_without_email",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6b0444d9-effb-4102-8281-a5b51a3ae256",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"email must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"email must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"email must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"\",\r\n    \"password\": \"1asdf234\"\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/dashboard-user-login",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"dashboard-user-login"
									]
								},
								"description": "BRD: Dashboard User (Techserve4u/Company admin) login in admin panel.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"email\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"\",\r\n    \"password\": \"1asdf234\"\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"email must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"email must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-16.2 Company_admin_login_without_password",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6c12a930-2fa8-469c-9146-2f8239e24511",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"password must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"password must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"password must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"fuadahmed@yahoo.com\",\r\n    \"password\": \"\"\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/dashboard-user-login",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"dashboard-user-login"
									]
								},
								"description": "BRD: Dashboard User (Techserve4u/Company admin) login in admin panel.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"password\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"fuadahmed@yahoo.com\",\r\n    \"password\": \"\"\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"password must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"password must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-16.3 Company_admin_login_without_email_password",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7df92cfa-34af-49b6-8cf0-7a404e4bb0f5",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"email must be non-empty\",\r",
											"                \"password must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"email must be non-empty\",\r",
											"                    \"password must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"email must be non-empty\",\r",
											"                            \"password must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"\",\r\n    \"password\": \"\"\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/dashboard-user-login",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"dashboard-user-login"
									]
								},
								"description": "BRD: Dashboard User (Techserve4u/Company admin) login in admin panel.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"email and password\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"\",\r\n    \"password\": \"\"\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"email must be non-empty\",\r\n        \"password must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"email must be non-empty\",\r\n        \"password must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "FFME2-14 Create_or_register_users",
					"item": [
						{
							"name": "FFME2-14.1 Create_user_without_phone_number",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2037125f-cacf-4260-b93b-d42f91a13319",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"phone_number must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"phone_number must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"phone_number must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"phone_number\": \"\",\r\n    \"company_id\": 175,\r\n    \"iso_code\": \"BD\",\r\n    \"first_name\": \"Abidur\",\r\n    \"last_name\": \"Rahman\",\r\n    \"nid\": \"25695845621895\",\r\n    \"designation\": \"QA Guy\",\r\n    \"department\": \"Tech\"\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-user",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"register-user"
									]
								},
								"description": "BRD: Company admin should be able to register app user from admin panel.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"phonenumber\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"phone_number\": \"\",\r\n    \"company_id\": 175,\r\n    \"iso_code\": \"BD\",\r\n    \"first_name\": \"Abidur\",\r\n    \"last_name\": \"Rahman\",\r\n    \"nid\": \"25695845621895\",\r\n    \"designation\": \"QA Guy\",\r\n    \"department\": \"Tech\"\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"phone_number must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"phone_number must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-14.2 Create_user_without_iso_code",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "591598f7-0614-42ab-a317-bc810a8b7cb9",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"iso_code must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"iso_code must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"iso_code must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"phone_number\": \"01767666910\",\r\n    \"company_id\": 175,\r\n    \"iso_code\": \"\",\r\n    \"first_name\": \"Abidur\",\r\n    \"last_name\": \"Rahman\",\r\n    \"nid\": \"25695845621895\",\r\n    \"designation\": \"QA Guy\",\r\n    \"department\": \"Tech\"\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-user",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"register-user"
									]
								},
								"description": "BRD: Company admin should be able to register app user from admin panel.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"iso code\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"phone_number\": \"01767666910\",\r\n    \"company_id\": 175,\r\n    \"iso_code\": \"\",\r\n    \"first_name\": \"Abidur\",\r\n    \"last_name\": \"Rahman\",\r\n    \"nid\": \"25695845621895\",\r\n    \"designation\": \"QA Guy\",\r\n    \"department\": \"Tech\"\r\n}\r\nExpected Result: \r\n{\r\n    \"message\": [\r\n        \"iso_code must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"iso_code must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-14.3 Create_user_without_firstname",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a5a3c7b3-c609-4dfe-b332-197d89ac726f",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"first_name must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"first_name must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"first_name must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"phone_number\": \"01767666910\",\r\n    \"company_id\": 175,\r\n    \"iso_code\": \"23\",\r\n    \"first_name\": \"\",\r\n    \"last_name\": \"Rahman\",\r\n    \"nid\": \"25695845621895\",\r\n    \"designation\": \"QA Guy\",\r\n    \"department\": \"Tech\"\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-user",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"register-user"
									]
								},
								"description": "BRD: Company admin should be able to register app user from admin panel.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"firstname\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"phone_number\": \"01767666910\",\r\n    \"company_id\": 175,\r\n    \"iso_code\": \"23\",\r\n    \"first_name\": \"\",\r\n    \"last_name\": \"Rahman\",\r\n    \"nid\": \"25695845621895\",\r\n    \"designation\": \"QA Guy\",\r\n    \"department\": \"Tech\"\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"first_name must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"first_name must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-14.4 Create_user_without_lastname",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f1678d9c-e9be-42c2-b541-c655004a4b18",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"last_name must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"last_name must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"last_name must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"phone_number\": \"01767666910\",\r\n    \"company_id\": 175,\r\n    \"iso_code\": \"23\",\r\n    \"first_name\": \"abidur\",\r\n    \"last_name\": \"\",\r\n    \"nid\": \"25695845621895\",\r\n    \"designation\": \"QA Guy\",\r\n    \"department\": \"Tech\"\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-user",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"register-user"
									],
									"query": [
										{
											"key": null,
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "BRD: Company admin should be able to register app user from admin panel.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"lastname\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"phone_number\": \"01767666910\",\r\n    \"company_id\": 175,\r\n    \"iso_code\": \"23\",\r\n    \"first_name\": \"abidur\",\r\n    \"last_name\": \"\",\r\n    \"nid\": \"25695845621895\",\r\n    \"designation\": \"QA Guy\",\r\n    \"department\": \"Tech\"\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"last_name must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"last_name must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-14.5 Create_user_without_NID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ecdc7c8c-785c-4187-a07a-5d27f54dbf5b",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"nid must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"nid must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"nid must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"phone_number\": \"01767666910\",\r\n    \"company_id\": 175,\r\n    \"iso_code\": \"23\",\r\n    \"first_name\": \"abidur\",\r\n    \"last_name\": \"Rahman\",\r\n    \"nid\": \"\",\r\n    \"designation\": \"QA Guy\",\r\n    \"department\": \"Tech\"\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-user",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"register-user"
									]
								},
								"description": "BRD: Company admin should be able to register app user from admin panel.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"NID\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"phone_number\": \"01767666910\",\r\n    \"company_id\": 175,\r\n    \"iso_code\": \"23\",\r\n    \"first_name\": \"abidur\",\r\n    \"last_name\": \"Rahman\",\r\n    \"nid\": \"\",\r\n    \"designation\": \"QA Guy\",\r\n    \"department\": \"Tech\"\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"nid must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"nid must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-14.6 Create_user_without_designation",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cfecb397-8b0b-41bf-91e7-9e81b2006679",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"designation must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"designation must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"designation must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"phone_number\": \"01767666910\",\r\n    \"company_id\": 175,\r\n    \"iso_code\": \"23\",\r\n    \"first_name\": \"abidur\",\r\n    \"last_name\": \"Rahman\",\r\n    \"nid\": \"655555555656565\",\r\n    \"designation\": \"\",\r\n    \"department\": \"Tech\"\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-user",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"register-user"
									]
								},
								"description": "BRD: Company admin should be able to register app user from admin panel.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"designation\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"phone_number\": \"01767666910\",\r\n    \"company_id\": 175,\r\n    \"iso_code\": \"23\",\r\n    \"first_name\": \"abidur\",\r\n    \"last_name\": \"Rahman\",\r\n    \"nid\": \"655555555656565\",\r\n    \"designation\": \"\",\r\n    \"department\": \"Tech\"\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"designation must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"designation must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-14.7 Create_user_without_department",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a8fa048f-36f3-44c4-b709-dee6ea603feb",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"department must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"department must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"department must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"phone_number\": \"01767666910\",\r\n    \"company_id\": 175,\r\n    \"iso_code\": \"23\",\r\n    \"first_name\": \"abidur\",\r\n    \"last_name\": \"Rahman\",\r\n    \"nid\": \"655555555656565\",\r\n    \"designation\": \"qa guy\",\r\n    \"department\": \"\"\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-user",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"register-user"
									]
								},
								"description": "BRD: Company admin should be able to register app user from admin panel.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"department\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"phone_number\": \"01767666910\",\r\n    \"company_id\": 175,\r\n    \"iso_code\": \"23\",\r\n    \"first_name\": \"abidur\",\r\n    \"last_name\": \"Rahman\",\r\n    \"nid\": \"655555555656565\",\r\n    \"designation\": \"qa guy\",\r\n    \"department\": \"\"\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"department must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"department must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-14.8 Create_user_without_designation_department",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5cbb0d28-5bd5-4f15-b33f-7c5a834de11e",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"designation must be non-empty\",\r",
											"                \"department must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"designation must be non-empty\",\r",
											"                    \"department must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"designation must be non-empty\",\r",
											"                            \"department must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"phone_number\": \"01767666910\",\r\n    \"company_id\": 175,\r\n    \"iso_code\": \"23\",\r\n    \"first_name\": \"abidur\",\r\n    \"last_name\": \"Rahman\",\r\n    \"nid\": \"655555555656565\",\r\n    \"designation\": \"\",\r\n    \"department\": \"\"\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-user",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"register-user"
									]
								},
								"description": "BRD: Company admin should be able to register app user from admin panel.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"designation and department\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"phone_number\": \"01767666910\",\r\n    \"company_id\": 175,\r\n    \"iso_code\": \"23\",\r\n    \"first_name\": \"abidur\",\r\n    \"last_name\": \"Rahman\",\r\n    \"nid\": \"655555555656565\",\r\n    \"designation\": \"\",\r\n    \"department\": \"\"\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"designation must be non-empty\",\r\n        \"department must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"designation must be non-empty\",\r\n        \"department must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-14.9 Create_user_firstname_and_NID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4d91efba-fdb3-4713-adfc-ecce528c9e3e",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"first_name must be non-empty\",\r",
											"                \"nid must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"first_name must be non-empty\",\r",
											"                    \"nid must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"first_name must be non-empty\",\r",
											"                            \"nid must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"phone_number\": \"01767666910\",\r\n    \"company_id\": 175,\r\n    \"iso_code\": \"23\",\r\n    \"first_name\": \"\",\r\n    \"last_name\": \"Rahman\",\r\n    \"nid\": \"\",\r\n    \"designation\": \"hello\",\r\n    \"department\": \"tech\"\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-user",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"register-user"
									]
								},
								"description": "BRD: Company admin should be able to register app user from admin panel.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"firstname and NID\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"phone_number\": \"01767666910\",\r\n    \"company_id\": 175,\r\n    \"iso_code\": \"23\",\r\n    \"first_name\": \"\",\r\n    \"last_name\": \"Rahman\",\r\n    \"nid\": \"\",\r\n    \"designation\": \"hello\",\r\n    \"department\": \"tech\"\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"first_name must be non-empty\",\r\n        \"nid must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"first_name must be non-empty\",\r\n        \"nid must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-14.10 Create_user_without_lastname_and_NID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "91f17d3a-e2dd-415b-a01e-ba00c8944612",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"last_name must be non-empty\",\r",
											"                \"nid must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"last_name must be non-empty\",\r",
											"                    \"nid must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"last_name must be non-empty\",\r",
											"                            \"nid must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"phone_number\": \"01767666910\",\r\n    \"company_id\": 175,\r\n    \"iso_code\": \"23\",\r\n    \"first_name\": \"Abidur\",\r\n    \"last_name\": \"\",\r\n    \"nid\": \"\",\r\n    \"designation\": \"hello\",\r\n    \"department\": \"tech\"\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-user",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"register-user"
									]
								},
								"description": "BRD: Company admin should be able to register app user from admin panel.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"lastname and NID\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"phone_number\": \"01767666910\",\r\n    \"company_id\": 175,\r\n    \"iso_code\": \"23\",\r\n    \"first_name\": \"Abidur\",\r\n    \"last_name\": \"\",\r\n    \"nid\": \"\",\r\n    \"designation\": \"hello\",\r\n    \"department\": \"tech\"\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"last_name must be non-empty\",\r\n        \"nid must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"last_name must be non-empty\",\r\n        \"nid must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-14.11 Create_user_without_designation_and_NID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2537bd07-5bce-4f73-ae68-2efe54ab8f5e",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"nid must be non-empty\",\r",
											"                \"designation must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"nid must be non-empty\",\r",
											"                    \"designation must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"nid must be non-empty\",\r",
											"                            \"designation must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"phone_number\": \"01767666910\",\r\n    \"company_id\": 175,\r\n    \"iso_code\": \"23\",\r\n    \"first_name\": \"Abidur\",\r\n    \"last_name\": \"Rahman\",\r\n    \"nid\": \"\",\r\n    \"designation\": \"\",\r\n    \"department\": \"tech\"\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-user",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"register-user"
									]
								},
								"description": "BRD: Company admin should be able to register app user from admin panel.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"designation and NID\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"phone_number\": \"01767666910\",\r\n    \"company_id\": 175,\r\n    \"iso_code\": \"23\",\r\n    \"first_name\": \"Abidur\",\r\n    \"last_name\": \"Rahman\",\r\n    \"nid\": \"\",\r\n    \"designation\": \"\",\r\n    \"department\": \"tech\"\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"nid must be non-empty\",\r\n        \"designation must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"nid must be non-empty\",\r\n        \"designation must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-14.12 Create_user_without_department_and_NID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d54c844c-ba87-4dd3-8d67-d56c9a723b5e",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"nid must be non-empty\",\r",
											"                \"department must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"nid must be non-empty\",\r",
											"                    \"department must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"nid must be non-empty\",\r",
											"                            \"department must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"phone_number\": \"01767666910\",\r\n    \"company_id\": 175,\r\n    \"iso_code\": \"23\",\r\n    \"first_name\": \"Abidur\",\r\n    \"last_name\": \"Rahman\",\r\n    \"nid\": \"\",\r\n    \"designation\": \"QA guy\",\r\n    \"department\": \"\"\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-user",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"register-user"
									]
								},
								"description": "BRD: Company admin should be able to register app user from admin panel.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"department and NID\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"phone_number\": \"01767666910\",\r\n    \"company_id\": 175,\r\n    \"iso_code\": \"23\",\r\n    \"first_name\": \"Abidur\",\r\n    \"last_name\": \"Rahman\",\r\n    \"nid\": \"\",\r\n    \"designation\": \"QA guy\",\r\n    \"department\": \"\"\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"nid must be non-empty\",\r\n        \"department must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"nid must be non-empty\",\r\n        \"department must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-14.13 Create_user_without_firstname_and_department",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8b8ff4df-cdab-4e32-b823-dd45fd70684c",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"first_name must be non-empty\",\r",
											"                \"department must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"first_name must be non-empty\",\r",
											"                    \"department must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"first_name must be non-empty\",\r",
											"                            \"department must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"phone_number\": \"01767666910\",\r\n    \"company_id\": 175,\r\n    \"iso_code\": \"23\",\r\n    \"first_name\": \"\",\r\n    \"last_name\": \"Rahman\",\r\n    \"nid\": \"464644564456464\",\r\n    \"designation\": \"QA guy\",\r\n    \"department\": \"\"\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-user",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"register-user"
									]
								},
								"description": "BRD: Company admin should be able to register app user from admin panel.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"firstname and department\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"phone_number\": \"01767666910\",\r\n    \"company_id\": 175,\r\n    \"iso_code\": \"23\",\r\n    \"first_name\": \"\",\r\n    \"last_name\": \"Rahman\",\r\n    \"nid\": \"464644564456464\",\r\n    \"designation\": \"QA guy\",\r\n    \"department\": \"\"\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"first_name must be non-empty\",\r\n        \"department must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"first_name must be non-empty\",\r\n        \"department must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-14.14 Create_user_without_lastname_and_department",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "85a4b701-f609-4c40-a395-8f8995ec1efd",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"last_name must be non-empty\",\r",
											"                \"department must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"last_name must be non-empty\",\r",
											"                    \"department must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"last_name must be non-empty\",\r",
											"                            \"department must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"phone_number\": \"01767666910\",\r\n    \"company_id\": 175,\r\n    \"iso_code\": \"23\",\r\n    \"first_name\": \"Abidur\",\r\n    \"last_name\": \"\",\r\n    \"nid\": \"464644564456464\",\r\n    \"designation\": \"QA guy\",\r\n    \"department\": \"\"\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-user",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"register-user"
									]
								},
								"description": "BRD: Company admin should be able to register app user from admin panel.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"lastname and department\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"phone_number\": \"01767666910\",\r\n    \"company_id\": 175,\r\n    \"iso_code\": \"23\",\r\n    \"first_name\": \"Abidur\",\r\n    \"last_name\": \"\",\r\n    \"nid\": \"464644564456464\",\r\n    \"designation\": \"QA guy\",\r\n    \"department\": \"\"\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"last_name must be non-empty\",\r\n        \"department must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"last_name must be non-empty\",\r\n        \"department must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-14.15 Create_user_without_firstname_and_designation",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1b07446e-4162-4209-a5fe-2b66f7b0b5f5",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= \r",
											"{\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"first_name must be non-empty\",\r",
											"                \"designation must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"first_name must be non-empty\",\r",
											"                    \"designation must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"first_name must be non-empty\",\r",
											"                            \"designation must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"phone_number\": \"01767666910\",\r\n    \"company_id\": 175,\r\n    \"iso_code\": \"23\",\r\n    \"first_name\": \"\",\r\n    \"last_name\": \"Rahman\",\r\n    \"nid\": \"464644564456464\",\r\n    \"designation\": \"\",\r\n    \"department\": \"Tech\"\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-user",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"register-user"
									]
								},
								"description": "BRD: Company admin should be able to register app user from admin panel.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"firstname and designation\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"phone_number\": \"01767666910\",\r\n    \"company_id\": 175,\r\n    \"iso_code\": \"23\",\r\n    \"first_name\": \"\",\r\n    \"last_name\": \"Rahman\",\r\n    \"nid\": \"464644564456464\",\r\n    \"designation\": \"\",\r\n    \"department\": \"Tech\"\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"first_name must be non-empty\",\r\n        \"designation must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"first_name must be non-empty\",\r\n        \"designation must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-14.16 Create_user_without_lastname_and_designation",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4c180fe9-dc2b-4b47-a316-bdc8f1778231",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"last_name must be non-empty\",\r",
											"                \"designation must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"last_name must be non-empty\",\r",
											"                    \"designation must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"last_name must be non-empty\",\r",
											"                            \"designation must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"phone_number\": \"01767666910\",\r\n    \"company_id\": 175,\r\n    \"iso_code\": \"23\",\r\n    \"first_name\": \"Abidur\",\r\n    \"last_name\": \"\",\r\n    \"nid\": \"464644564456464\",\r\n    \"designation\": \"\",\r\n    \"department\": \"Tech\"\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-user",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"register-user"
									]
								},
								"description": "BRD: Company admin should be able to register app user from admin panel.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"lastname and designation\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"phone_number\": \"01767666910\",\r\n    \"company_id\": 175,\r\n    \"iso_code\": \"23\",\r\n    \"first_name\": \"Abidur\",\r\n    \"last_name\": \"\",\r\n    \"nid\": \"464644564456464\",\r\n    \"designation\": \"\",\r\n    \"department\": \"Tech\"\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"last_name must be non-empty\",\r\n        \"designation must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"last_name must be non-empty\",\r\n        \"designation must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-14.17 Create_user_without_isoCode_and_firstname",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "645d0df3-3f41-4236-9f9b-887b37575eef",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"iso_code must be non-empty\",\r",
											"                \"first_name must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"iso_code must be non-empty\",\r",
											"                    \"first_name must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"iso_code must be non-empty\",\r",
											"                            \"first_name must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"phone_number\": \"01767666910\",\r\n    \"company_id\": 175,\r\n    \"iso_code\": \"\",\r\n    \"first_name\": \"\",\r\n    \"last_name\": \"Rahman\",\r\n    \"nid\": \"464644564456464\",\r\n    \"designation\": \"QA guy\",\r\n    \"department\": \"Tech\"\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-user",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"register-user"
									]
								},
								"description": "BRD: Company admin should be able to register app user from admin panel.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"iso code and firstname\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"phone_number\": \"01767666910\",\r\n    \"company_id\": 175,\r\n    \"iso_code\": \"\",\r\n    \"first_name\": \"\",\r\n    \"last_name\": \"Rahman\",\r\n    \"nid\": \"464644564456464\",\r\n    \"designation\": \"QA guy\",\r\n    \"department\": \"Tech\"\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"iso_code must be non-empty\",\r\n        \"first_name must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"iso_code must be non-empty\",\r\n        \"first_name must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-14.18 Create_user_without_isoCode_and_lastname",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3a31d5f6-fa9a-4214-bbf5-4a682e518408",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"iso_code must be non-empty\",\r",
											"                \"last_name must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"iso_code must be non-empty\",\r",
											"                    \"last_name must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"iso_code must be non-empty\",\r",
											"                            \"last_name must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"phone_number\": \"01767666910\",\r\n    \"company_id\": 175,\r\n    \"iso_code\": \"\",\r\n    \"first_name\": \"Abidur\",\r\n    \"last_name\": \"\",\r\n    \"nid\": \"464644564456464\",\r\n    \"designation\": \"QA guy\",\r\n    \"department\": \"Tech\"\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-user",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"register-user"
									]
								},
								"description": "BRD: Company admin should be able to register app user from admin panel.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"iso code and lastname\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"phone_number\": \"01767666910\",\r\n    \"company_id\": 175,\r\n    \"iso_code\": \"\",\r\n    \"first_name\": \"Abidur\",\r\n    \"last_name\": \"\",\r\n    \"nid\": \"464644564456464\",\r\n    \"designation\": \"QA guy\",\r\n    \"department\": \"Tech\"\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"iso_code must be non-empty\",\r\n        \"last_name must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"iso_code must be non-empty\",\r\n        \"last_name must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-14.19 Create_user_without_iso_code_and_department",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "dd1cfdf4-d987-44b6-aae0-2ddf43db987b",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"iso_code must be non-empty\",\r",
											"                \"department must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"iso_code must be non-empty\",\r",
											"                    \"department must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"iso_code must be non-empty\",\r",
											"                            \"department must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"phone_number\": \"01767666910\",\r\n    \"company_id\": 175,\r\n    \"iso_code\": \"\",\r\n    \"first_name\": \"Abidur\",\r\n    \"last_name\": \"Rahman\",\r\n    \"nid\": \"464644564456464\",\r\n    \"designation\": \"QA guy\",\r\n    \"department\": \"\"\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-user",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"register-user"
									]
								},
								"description": "BRD: Company admin should be able to register app user from admin panel.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"iso code and department\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"phone_number\": \"01767666910\",\r\n    \"company_id\": 175,\r\n    \"iso_code\": \"\",\r\n    \"first_name\": \"Abidur\",\r\n    \"last_name\": \"Rahman\",\r\n    \"nid\": \"464644564456464\",\r\n    \"designation\": \"QA guy\",\r\n    \"department\": \"\"\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"iso_code must be non-empty\",\r\n        \"department must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"iso_code must be non-empty\",\r\n        \"department must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-14.20 Create_user_without_iso_code_and_designation",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8f0a5892-95b5-4c3a-930e-282e03dcb432",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"{\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"iso_code must be non-empty\",\r",
											"                \"designation must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"iso_code must be non-empty\",\r",
											"                    \"designation must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"iso_code must be non-empty\",\r",
											"                            \"designation must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"var schema= \r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"phone_number\": \"01767666910\",\r\n    \"company_id\": 175,\r\n    \"iso_code\": \"\",\r\n    \"first_name\": \"Abidur\",\r\n    \"last_name\": \"Rahman\",\r\n    \"nid\": \"464644564456464\",\r\n    \"designation\": \"\",\r\n    \"department\": \"Tech\"\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-user",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"register-user"
									]
								},
								"description": "BRD: Company admin should be able to register app user from admin panel.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"iso code and designation\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"phone_number\": \"01767666910\",\r\n    \"company_id\": 175,\r\n    \"iso_code\": \"\",\r\n    \"first_name\": \"Abidur\",\r\n    \"last_name\": \"Rahman\",\r\n    \"nid\": \"464644564456464\",\r\n    \"designation\": \"\",\r\n    \"department\": \"Tech\"\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"iso_code must be non-empty\",\r\n        \"designation must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"iso_code must be non-empty\",\r\n        \"designation must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-14.21 Create_user_without_iso_code_and_NID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e4267d91-3416-4801-beb1-4537e6a7479e",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"iso_code must be non-empty\",\r",
											"                \"nid must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"iso_code must be non-empty\",\r",
											"                    \"nid must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"iso_code must be non-empty\",\r",
											"                            \"nid must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"phone_number\": \"01767666910\",\r\n    \"company_id\": 175,\r\n    \"iso_code\": \"\",\r\n    \"first_name\": \"Abidur\",\r\n    \"last_name\": \"Rahman\",\r\n    \"nid\": \"\",\r\n    \"designation\": \"QA Guys\",\r\n    \"department\": \"Tech\"\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-user",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"register-user"
									]
								},
								"description": "BRD: Company admin should be able to register app user from admin panel.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"iso code and NID\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"phone_number\": \"01767666910\",\r\n    \"company_id\": 175,\r\n    \"iso_code\": \"\",\r\n    \"first_name\": \"Abidur\",\r\n    \"last_name\": \"Rahman\",\r\n    \"nid\": \"\",\r\n    \"designation\": \"QA Guys\",\r\n    \"department\": \"Tech\"\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"iso_code must be non-empty\",\r\n        \"nid must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"iso_code must be non-empty\",\r\n        \"nid must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-14.22 Create_user_without_firstname_and_phonenumber",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "50c95368-0eff-4a21-a21a-3e6635e08253",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= \r",
											"{\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"phone_number must be non-empty\",\r",
											"                \"first_name must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"phone_number must be non-empty\",\r",
											"                    \"first_name must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"phone_number must be non-empty\",\r",
											"                            \"first_name must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"phone_number\": \"\",\r\n    \"company_id\": 175,\r\n    \"iso_code\": \"9684\",\r\n    \"first_name\": \"\",\r\n    \"last_name\": \"Rahman\",\r\n    \"nid\": \"5464964564\",\r\n    \"designation\": \"QA Guys\",\r\n    \"department\": \"Tech\"\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-user",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"register-user"
									]
								},
								"description": "BRD: Company admin should be able to register app user from admin panel.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"firstname and phonenumber\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"phone_number\": \"\",\r\n    \"company_id\": 175,\r\n    \"iso_code\": \"9684\",\r\n    \"first_name\": \"\",\r\n    \"last_name\": \"Rahman\",\r\n    \"nid\": \"5464964564\",\r\n    \"designation\": \"QA Guys\",\r\n    \"department\": \"Tech\"\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"phone_number must be non-empty\",\r\n        \"first_name must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"phone_number must be non-empty\",\r\n        \"first_name must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-14.23 Create_user_without_lastname_and_phonenumber",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d637532c-53fb-415a-911c-67e2eae37505",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= \r",
											"{\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"phone_number must be non-empty\",\r",
											"                \"last_name must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"phone_number must be non-empty\",\r",
											"                    \"last_name must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"phone_number must be non-empty\",\r",
											"                            \"last_name must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"phone_number\": \"\",\r\n    \"company_id\": 175,\r\n    \"iso_code\": \"9684\",\r\n    \"first_name\": \"Abidur\",\r\n    \"last_name\": \"\",\r\n    \"nid\": \"5464964564\",\r\n    \"designation\": \"QA Guys\",\r\n    \"department\": \"Tech\"\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-user",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"register-user"
									]
								},
								"description": "BRD: Company admin should be able to register app user from admin panel.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"lastname and phonenumber\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"phone_number\": \"\",\r\n    \"company_id\": 175,\r\n    \"iso_code\": \"9684\",\r\n    \"first_name\": \"Abidur\",\r\n    \"last_name\": \"\",\r\n    \"nid\": \"5464964564\",\r\n    \"designation\": \"QA Guys\",\r\n    \"department\": \"Tech\"\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"phone_number must be non-empty\",\r\n        \"last_name must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"phone_number must be non-empty\",\r\n        \"last_name must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-14.24 Create_user_without_phonenumber_and_NID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cc4711e5-bdb6-4bc5-8413-60205362e55f",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= \r",
											"\r",
											"{\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"phone_number must be non-empty\",\r",
											"                \"nid must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"phone_number must be non-empty\",\r",
											"                    \"nid must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"phone_number must be non-empty\",\r",
											"                            \"nid must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"phone_number\": \"\",\r\n    \"company_id\": 175,\r\n    \"iso_code\": \"9684\",\r\n    \"first_name\": \"Abidur\",\r\n    \"last_name\": \"Rahmna\",\r\n    \"nid\": \"\",\r\n    \"designation\": \"QA Guys\",\r\n    \"department\": \"Tech\"\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-user",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"register-user"
									]
								},
								"description": "BRD: Company admin should be able to register app user from admin panel.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"phonenumber and NID\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"phone_number\": \"\",\r\n    \"company_id\": 175,\r\n    \"iso_code\": \"9684\",\r\n    \"first_name\": \"Abidur\",\r\n    \"last_name\": \"Rahmna\",\r\n    \"nid\": \"\",\r\n    \"designation\": \"QA Guys\",\r\n    \"department\": \"Tech\"\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"phone_number must be non-empty\",\r\n        \"nid must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"phone_number must be non-empty\",\r\n        \"nid must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-14.25 Create_user_without_phonenumber_and_department",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "98f14408-2494-42e0-86b3-07e0e3f006b1",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= \r",
											"\r",
											"{\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"phone_number must be non-empty\",\r",
											"                \"department must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"phone_number must be non-empty\",\r",
											"                    \"department must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"phone_number must be non-empty\",\r",
											"                            \"department must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"phone_number\": \"\",\r\n    \"company_id\": 175,\r\n    \"iso_code\": \"9684\",\r\n    \"first_name\": \"Abidur\",\r\n    \"last_name\": \"Rahman\",\r\n    \"nid\": \"5464964564\",\r\n    \"designation\": \"QA Guys\",\r\n    \"department\": \"\"\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-user",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"register-user"
									]
								},
								"description": "BRD: Company admin should be able to register app user from admin panel.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"phonenumber and department\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"phone_number\": \"\",\r\n    \"company_id\": 175,\r\n    \"iso_code\": \"9684\",\r\n    \"first_name\": \"Abidur\",\r\n    \"last_name\": \"Rahman\",\r\n    \"nid\": \"5464964564\",\r\n    \"designation\": \"QA Guys\",\r\n    \"department\": \"\"\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"phone_number must be non-empty\",\r\n        \"department must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"phone_number must be non-empty\",\r\n        \"department must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-14.26 Create_user_without_phonenumber_and_designation",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "50d2a0ac-547a-476d-b440-3058c6f08490",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"phone_number must be non-empty\",\r",
											"                \"designation must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"phone_number must be non-empty\",\r",
											"                    \"designation must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"phone_number must be non-empty\",\r",
											"                            \"designation must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"phone_number\": \"\",\r\n    \"company_id\": 175,\r\n    \"iso_code\": \"9684\",\r\n    \"first_name\": \"Abidur\",\r\n    \"last_name\": \"Rahman\",\r\n    \"nid\": \"5464964564\",\r\n    \"designation\": \"\",\r\n    \"department\": \"Tech\"\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-user",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"register-user"
									]
								},
								"description": "BRD: Company admin should be able to register app user from admin panel.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"phonenumber and designation\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"phone_number\": \"\",\r\n    \"company_id\": 175,\r\n    \"iso_code\": \"9684\",\r\n    \"first_name\": \"Abidur\",\r\n    \"last_name\": \"Rahman\",\r\n    \"nid\": \"5464964564\",\r\n    \"designation\": \"\",\r\n    \"department\": \"Tech\"\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"phone_number must be non-empty\",\r\n        \"designation must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"phone_number must be non-empty\",\r\n        \"designation must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-14.27 Create_user_without_phonenumber_and_iso_code",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2549d77f-d235-490b-ab05-293b8ccf1e8f",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"phone_number must be non-empty\",\r",
											"                \"iso_code must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"phone_number must be non-empty\",\r",
											"                    \"iso_code must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"phone_number must be non-empty\",\r",
											"                            \"iso_code must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"phone_number\": \"\",\r\n    \"company_id\": 175,\r\n    \"iso_code\": \"\",\r\n    \"first_name\": \"Abidur\",\r\n    \"last_name\": \"Rahman\",\r\n    \"nid\": \"5464964564\",\r\n    \"designation\": \"QA Guys\",\r\n    \"department\": \"Tech\"\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-user",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"register-user"
									]
								},
								"description": "BRD: Company admin should be able to register app user from admin panel.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"phonenumber and iso code\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"phone_number\": \"\",\r\n    \"company_id\": 175,\r\n    \"iso_code\": \"\",\r\n    \"first_name\": \"Abidur\",\r\n    \"last_name\": \"Rahman\",\r\n    \"nid\": \"5464964564\",\r\n    \"designation\": \"QA Guys\",\r\n    \"department\": \"Tech\"\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"phone_number must be non-empty\",\r\n        \"iso_code must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"phone_number must be non-empty\",\r\n        \"iso_code must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-14.28 Create_user_without_phonenumber_and_company_id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d2bc7952-4720-43ad-bcce-bf4e9e54c7e6",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= \r",
											"{\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"phone_number must be non-empty\",\r",
											"                \"company_id must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"phone_number must be non-empty\",\r",
											"                    \"company_id must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"phone_number must be non-empty\",\r",
											"                            \"company_id must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"phone_number\": \"\",\r\n    \r\n    \"iso_code\": \"9684\",\r\n    \"first_name\": \"Abidur\",\r\n    \"last_name\": \"Rahman\",\r\n    \"nid\": \"5464964564\",\r\n    \"designation\": \"QA Guys\",\r\n  \r\n    \"department\": \"Tech\",\r\n      \"company_id\": \"\"\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-user",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"register-user"
									]
								},
								"description": "BRD: Company admin should be able to register app user from admin panel.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"phonenumber and company id\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"phone_number\": \"\",\r\n    \r\n    \"iso_code\": \"9684\",\r\n    \"first_name\": \"Abidur\",\r\n    \"last_name\": \"Rahman\",\r\n    \"nid\": \"5464964564\",\r\n    \"designation\": \"QA Guys\",\r\n  \r\n    \"department\": \"Tech\",\r\n      \"company_id\": \"\"\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"phone_number must be non-empty\",\r\n        \"company_id must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"phone_number must be non-empty\",\r\n        \"company_id must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-14.29 Create_user_without_all_the_information",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "88537d04-bc3f-4745-8014-68b523d47189",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= \r",
											"{\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"phone_number must be non-empty\",\r",
											"                \"iso_code must be non-empty\",\r",
											"                \"company_id must be non-empty\",\r",
											"                \"first_name must be non-empty\",\r",
											"                \"last_name must be non-empty\",\r",
											"                \"nid must be non-empty\",\r",
											"                \"designation must be non-empty\",\r",
											"                \"department must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"phone_number must be non-empty\",\r",
											"                    \"iso_code must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"phone_number must be non-empty\",\r",
											"                            \"iso_code must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"phone_number\": \"\",\r\n    \"company_id\": \"\",\r\n    \"iso_code\": \"\",\r\n    \"first_name\": \"\",\r\n    \"last_name\": \"\",\r\n    \"nid\": \"\",\r\n    \"designation\": \"\",\r\n    \"department\": \"\"\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/register-user?",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"register-user"
									],
									"query": [
										{
											"key": "",
											"value": null
										}
									]
								},
								"description": "BRD: Company admin should be able to register app user from admin panel.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"all the information\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"phone_number\": \"\",\r\n    \"company_id\": \"\",\r\n    \"iso_code\": \"\",\r\n    \"first_name\": \"\",\r\n    \"last_name\": \"\",\r\n    \"nid\": \"\",\r\n    \"designation\": \"\",\r\n    \"department\": \"\"\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"phone_number must be non-empty\",\r\n        \"iso_code must be non-empty\",\r\n        \"company_id must be non-empty\",\r\n        \"first_name must be non-empty\",\r\n        \"last_name must be non-empty\",\r\n        \"nid must be non-empty\",\r\n        \"designation must be non-empty\",\r\n        \"department must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"phone_number must be non-empty\",\r\n        \"iso_code must be non-empty\",\r\n        \"company_id must be non-empty\",\r\n        \"first_name must be non-empty\",\r\n        \"last_name must be non-empty\",\r\n        \"nid must be non-empty\",\r\n        \"designation must be non-empty\",\r\n        \"department must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "d5702e58-d76d-49cc-bdde-09fc5925a031",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "9d0260a0-e835-430a-b909-23191de20872",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "FFME2-12 User_login",
					"item": [
						{
							"name": "FFME2-12.1 Login_user_without_phone_number",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8364a869-9c8a-444f-8688-562a5caae0b1",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"phone_number must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"phone_number must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"phone_number must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"phone_number\": \"\",\r\n    \"firebase_id\": \"firebase_ididid\",\r\n    \"secret_text\": \"the_super_secret_text\",\r\n    \"phone_number_int\": \"+8801767666911\",\r\n    \"iso_code\": \"BD\"\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/user-login",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"user-login"
									]
								},
								"description": "BRD: App user should be able to login the FFM mobile app.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"phonenumber\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"phone_number\": \"\",\r\n    \"firebase_id\": \"firebase_ididid\",\r\n    \"secret_text\": \"the_super_secret_text\",\r\n    \"phone_number_int\": \"+8801767666911\",\r\n    \"iso_code\": \"BD\"\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"phone_number must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"phone_number must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-12.2 Login_user_without_firebase_id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d58b79af-d954-4416-b86e-6f01639b6016",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"firebase_id must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"firebase_id must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"firebase_id must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"phone_number\": \"01767666911\",\r\n    \"firebase_id\": \"\",\r\n    \"secret_text\": \"the_super_secret_text\",\r\n    \"phone_number_int\": \"+8801767666911\",\r\n    \"iso_code\": \"BD\"\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/user-login",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"user-login"
									]
								},
								"description": "BRD: App user should be able to login the FFM mobile app.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"firebase id\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"phone_number\": \"01767666911\",\r\n    \"firebase_id\": \"\",\r\n    \"secret_text\": \"the_super_secret_text\",\r\n    \"phone_number_int\": \"+8801767666911\",\r\n    \"iso_code\": \"BD\"\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"firebase_id must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"firebase_id must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-12.3 Login_user_without_secret_text",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0c7b0133-11f7-4e0b-ac4a-d02e2bdc1fc8",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= \r",
											"{\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"secret_text must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"secret_text must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"secret_text must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"phone_number\": \"01767666911\",\r\n    \"firebase_id\": \"firebase_ididid\",\r\n    \"secret_text\": \"\",\r\n    \"phone_number_int\": \"+8801767666911\",\r\n    \"iso_code\": \"BD\"\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/user-login",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"user-login"
									]
								},
								"description": "BRD: App user should be able to login the FFM mobile app.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"secret text\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"phone_number\": \"01767666911\",\r\n    \"firebase_id\": \"firebase_ididid\",\r\n    \"secret_text\": \"\",\r\n    \"phone_number_int\": \"+8801767666911\",\r\n    \"iso_code\": \"BD\"\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"secret_text must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"secret_text must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-12.4 Login_user_without_phone_number_int",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8787744a-30c2-45a2-9198-a4b95ed64dc6",
										"exec": [
											"\r",
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= \r",
											"{\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"phone_number_int must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"phone_number_int must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"phone_number_int must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"phone_number\": \"01767666911\",\r\n    \"firebase_id\": \"firebase_ididid\",\r\n    \"secret_text\": \"the_super_secret_text\",\r\n    \"phone_number_int\": \"\",\r\n    \"iso_code\": \"BD\"\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/user-login",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"user-login"
									]
								},
								"description": "BRD: App user should be able to login the FFM mobile app.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"phone number int\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"phone_number\": \"01767666911\",\r\n    \"firebase_id\": \"firebase_ididid\",\r\n    \"secret_text\": \"the_super_secret_text\",\r\n    \"phone_number_int\": \"\",\r\n    \"iso_code\": \"BD\"\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"phone_number_int must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"phone_number_int must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-12.5 Login_user_without_iso_code",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c1eb8773-6547-4120-9e93-4c52d2486279",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= \r",
											"{\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"country_code must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"country_code must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"country_code must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"phone_number\": \"01767666911\",\r\n    \"firebase_id\": \"firebase_ididid\",\r\n    \"secret_text\": \"the_super_secret_text\",\r\n    \"phone_number_int\": \"+8801767666911\",\r\n    \"iso_code\": \"\"\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/user-login",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"user-login"
									]
								},
								"description": "BRD: App user should be able to login the FFM mobile app.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"iso code\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"phone_number\": \"01767666911\",\r\n    \"firebase_id\": \"firebase_ididid\",\r\n    \"secret_text\": \"the_super_secret_text\",\r\n    \"phone_number_int\": \"+8801767666911\",\r\n    \"iso_code\": \"\"\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"country_code must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"country_code must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-12.6 Login_user_without_phone_number_and_firebaseId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e5e4d61c-d8d3-4a62-877e-e8d178aee444",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= \r",
											"{\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"firebase_id must be non-empty\",\r",
											"                \"phone_number must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"firebase_id must be non-empty\",\r",
											"                    \"phone_number must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"firebase_id must be non-empty\",\r",
											"                            \"phone_number must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"phone_number\": \"\",\r\n    \"firebase_id\": \"\",\r\n    \"secret_text\": \"the_super_secret_text\",\r\n    \"phone_number_int\": \"+8801767666911\",\r\n    \"iso_code\": \"BD\"\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/user-login",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"user-login"
									]
								},
								"description": "BRD: App user should be able to login the FFM mobile app.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"phone number and firebase id\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"phone_number\": \"\",\r\n    \"firebase_id\": \"\",\r\n    \"secret_text\": \"the_super_secret_text\",\r\n    \"phone_number_int\": \"+8801767666911\",\r\n    \"iso_code\": \"BD\"\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"firebase_id must be non-empty\",\r\n        \"phone_number must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"firebase_id must be non-empty\",\r\n        \"phone_number must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-12.7 Login_user_without_phone_number_and_secretText",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "af15907c-7744-4e8b-9599-f1d08e344a73",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"phone_number must be non-empty\",\r",
											"                \"secret_text must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"phone_number must be non-empty\",\r",
											"                    \"secret_text must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"phone_number must be non-empty\",\r",
											"                            \"secret_text must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"phone_number\": \"\",\r\n    \"firebase_id\": \"firebase_ididid\",\r\n    \"secret_text\": \"\",\r\n    \"phone_number_int\": \"+8801767666911\",\r\n    \"iso_code\": \"BD\"\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/user-login",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"user-login"
									]
								},
								"description": "BRD: App user should be able to login the FFM mobile app.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"phone number and secret text\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"phone_number\": \"\",\r\n    \"firebase_id\": \"firebase_ididid\",\r\n    \"secret_text\": \"\",\r\n    \"phone_number_int\": \"+8801767666911\",\r\n    \"iso_code\": \"BD\"\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"phone_number must be non-empty\",\r\n        \"secret_text must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"phone_number must be non-empty\",\r\n        \"secret_text must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-12.8 Login_user_without_phone_number_and_phone_number_int",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8b58b728-3961-482a-b554-d4d6f5f832b2",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"phone_number must be non-empty\",\r",
											"                \"phone_number_int must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"phone_number must be non-empty\",\r",
											"                    \"phone_number_int must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"phone_number must be non-empty\",\r",
											"                            \"phone_number_int must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"phone_number\": \"\",\r\n    \"firebase_id\": \"firebase_ididid\",\r\n    \"secret_text\": \"the_super_secret_text\",\r\n    \"phone_number_int\": \"\",\r\n    \"iso_code\": \"BD\"\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/user-login",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"user-login"
									]
								},
								"description": "BRD: App user should be able to login the FFM mobile app.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"phone number and phone number int\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"phone_number\": \"\",\r\n    \"firebase_id\": \"firebase_ididid\",\r\n    \"secret_text\": \"the_super_secret_text\",\r\n    \"phone_number_int\": \"\",\r\n    \"iso_code\": \"BD\"\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"phone_number must be non-empty\",\r\n        \"phone_number_int must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"phone_number must be non-empty\",\r\n        \"phone_number_int must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-12.9 Login_user_without_phone_number_and_iso_code",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fcb14d60-ed19-43fe-84c7-2f6353b6c105",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= \r",
											"{\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"phone_number must be non-empty\",\r",
											"                \"country_code must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"phone_number must be non-empty\",\r",
											"                    \"country_code must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"phone_number must be non-empty\",\r",
											"                            \"country_code must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"phone_number\": \"\",\r\n    \"firebase_id\": \"firebase_ididid\",\r\n    \"secret_text\": \"the_super_secret_text\",\r\n    \"phone_number_int\": \"+8801767666911\",\r\n    \"iso_code\": \"\"\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/user-login",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"user-login"
									]
								},
								"description": "BRD: App user should be able to login the FFM mobile app.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"phone number and iso code\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"phone_number\": \"\",\r\n    \"firebase_id\": \"firebase_ididid\",\r\n    \"secret_text\": \"the_super_secret_text\",\r\n    \"phone_number_int\": \"+8801767666911\",\r\n    \"iso_code\": \"\"\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"phone_number must be non-empty\",\r\n        \"country_code must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"phone_number must be non-empty\",\r\n        \"country_code must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-12.10 Login_user_without_firebaseId_and_secretText",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "14b8849c-876e-456c-a76e-30d344bb0e16",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"firebase_id must be non-empty\",\r",
											"                \"secret_text must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"firebase_id must be non-empty\",\r",
											"                    \"secret_text must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"firebase_id must be non-empty\",\r",
											"                            \"secret_text must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"phone_number\": \"01767666911\",\r\n    \"firebase_id\": \"\",\r\n    \"secret_text\": \"\",\r\n    \"phone_number_int\": \"+8801767666911\",\r\n    \"iso_code\": \"BD\"\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/user-login",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"user-login"
									]
								},
								"description": "BRD: App user should be able to login the FFM mobile app.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"firebase id and secret text\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"phone_number\": \"01767666911\",\r\n    \"firebase_id\": \"\",\r\n    \"secret_text\": \"\",\r\n    \"phone_number_int\": \"+8801767666911\",\r\n    \"iso_code\": \"BD\"\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"firebase_id must be non-empty\",\r\n        \"secret_text must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"firebase_id must be non-empty\",\r\n        \"secret_text must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-12.11 Login_user_without_firebaseId_and_phone_number_int",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b8572348-c4a2-4b21-b6b4-8edbb036c6bf",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"firebase_id must be non-empty\",\r",
											"                \"phone_number_int must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"firebase_id must be non-empty\",\r",
											"                    \"phone_number_int must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"firebase_id must be non-empty\",\r",
											"                            \"phone_number_int must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"phone_number\": \"01767666911\",\r\n    \"firebase_id\": \"\",\r\n    \"secret_text\": \"the_super_secret_text\",\r\n    \"phone_number_int\": \"\",\r\n    \"iso_code\": \"BD\"\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/user-login",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"user-login"
									]
								},
								"description": "BRD: App user should be able to login the FFM mobile app.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"firebase id and phone number int\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"phone_number\": \"01767666911\",\r\n    \"firebase_id\": \"\",\r\n    \"secret_text\": \"the_super_secret_text\",\r\n    \"phone_number_int\": \"\",\r\n    \"iso_code\": \"BD\"\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"firebase_id must be non-empty\",\r\n        \"phone_number_int must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"firebase_id must be non-empty\",\r\n        \"phone_number_int must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-12.12 Login_user_without_firebaseId_and_iso_code",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "29a92673-a88f-40c2-8911-ab8368fc1f0c",
										"exec": [
											"\r",
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"firebase_id must be non-empty\",\r",
											"                \"country_code must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"firebase_id must be non-empty\",\r",
											"                    \"country_code must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"firebase_id must be non-empty\",\r",
											"                            \"country_code must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"phone_number\": \"01767666911\",\r\n    \"firebase_id\": \"\",\r\n    \"secret_text\": \"the_super_secret_text\",\r\n    \"phone_number_int\": \"+8801767666911\",\r\n    \"iso_code\": \"\"\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/user-login",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"user-login"
									]
								},
								"description": "BRD: App user should be able to login the FFM mobile app.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"firebase id and iso code\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"phone_number\": \"01767666911\",\r\n    \"firebase_id\": \"\",\r\n    \"secret_text\": \"the_super_secret_text\",\r\n    \"phone_number_int\": \"+8801767666911\",\r\n    \"iso_code\": \"\"\r\n}\r\nExpected Result: \r\n{\r\n    \"message\": [\r\n        \"firebase_id must be non-empty\",\r\n        \"country_code must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"firebase_id must be non-empty\",\r\n        \"country_code must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-12.13 Login_user_without_secretText_phone_number_int",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9ed9cb1f-1a6c-4464-9463-41d573fc7b50",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"phone_number_int must be non-empty\",\r",
											"                \"secret_text must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"phone_number_int must be non-empty\",\r",
											"                    \"secret_text must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"phone_number_int must be non-empty\",\r",
											"                            \"secret_text must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"phone_number\": \"01767666911\",\r\n    \"firebase_id\": \"firebase_ididid\",\r\n    \"secret_text\": \"\",\r\n    \"phone_number_int\": \"\",\r\n    \"iso_code\": \"BD\"\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/user-login",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"user-login"
									]
								},
								"description": "BRD: App user should be able to login the FFM mobile app.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"secret text and phone number int\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"phone_number\": \"01767666911\",\r\n    \"firebase_id\": \"firebase_ididid\",\r\n    \"secret_text\": \"\",\r\n    \"phone_number_int\": \"\",\r\n    \"iso_code\": \"BD\"\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"phone_number_int must be non-empty\",\r\n        \"secret_text must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"phone_number_int must be non-empty\",\r\n        \"secret_text must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-12.14 Login_user_without_secretText_and_iso_code",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ec94d1aa-4812-4004-b879-441016a403f9",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= \r",
											"{\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"country_code must be non-empty\",\r",
											"                \"secret_text must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"country_code must be non-empty\",\r",
											"                    \"secret_text must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"country_code must be non-empty\",\r",
											"                            \"secret_text must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"phone_number\": \"01767666911\",\r\n    \"firebase_id\": \"firebase_ididid\",\r\n    \"secret_text\": \"\",\r\n    \"phone_number_int\": \"+8801767666911\",\r\n    \"iso_code\": \"\"\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/user-login",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"user-login"
									]
								},
								"description": "BRD: App user should be able to login the FFM mobile app.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"secret text and iso code\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"phone_number\": \"01767666911\",\r\n    \"firebase_id\": \"firebase_ididid\",\r\n    \"secret_text\": \"\",\r\n    \"phone_number_int\": \"+8801767666911\",\r\n    \"iso_code\": \"\"\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"country_code must be non-empty\",\r\n        \"secret_text must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"country_code must be non-empty\",\r\n        \"secret_text must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-12.15 Login_user_without_iso_code_and_phone_number_int",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "751aa409-feaa-43c0-afc2-79d42cd6729f",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"phone_number_int must be non-empty\",\r",
											"                \"country_code must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"phone_number_int must be non-empty\",\r",
											"                    \"country_code must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"phone_number_int must be non-empty\",\r",
											"                            \"country_code must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"phone_number\": \"01767666911\",\r\n    \"firebase_id\": \"firebase_ididid\",\r\n    \"secret_text\": \"the_super_secret_text\",\r\n    \"phone_number_int\": \"\",\r\n    \"iso_code\": \"\"\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/user-login",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"user-login"
									]
								},
								"description": "BRD: App user should be able to login the FFM mobile app.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"iso code and phone number int\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"phone_number\": \"01767666911\",\r\n    \"firebase_id\": \"firebase_ididid\",\r\n    \"secret_text\": \"the_super_secret_text\",\r\n    \"phone_number_int\": \"\",\r\n    \"iso_code\": \"\"\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"phone_number_int must be non-empty\",\r\n        \"country_code must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"phone_number_int must be non-empty\",\r\n        \"country_code must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "FFME2-12.16 Login_user_without_all_the_login_information",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0b707562-d82f-45ab-846f-8a6fc26b4c0e",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": [\r",
											"                \"firebase_id must be non-empty\",\r",
											"                \"phone_number must be non-empty\",\r",
											"                \"phone_number_int must be non-empty\",\r",
											"                \"country_code must be non-empty\",\r",
											"                \"secret_text must be non-empty\"\r",
											"            ],\r",
											"            \"status\": \"failed\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    \"firebase_id must be non-empty\",\r",
											"                    \"phone_number must be non-empty\"\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"$id\": \"#/properties/message/items\",\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"firebase_id must be non-empty\",\r",
											"                            \"phone_number must be non-empty\"\r",
											"                        ]\r",
											"                    }\r",
											"                ]\r",
											"            }\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"failed\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"phone_number\": \"\",\r\n    \"firebase_id\": \"\",\r\n    \"secret_text\": \"\",\r\n    \"phone_number_int\": \"\",\r\n    \"iso_code\": \"\"\r\n}"
								},
								"url": {
									"raw": "167.99.73.130:30287/api/v1/field-force/auth/user-login",
									"host": [
										"167",
										"99",
										"73",
										"130"
									],
									"port": "30287",
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"user-login"
									]
								},
								"description": "BRD: App user should be able to login the FFM mobile app.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"all the information\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"phone_number\": \"\",\r\n    \"firebase_id\": \"\",\r\n    \"secret_text\": \"\",\r\n    \"phone_number_int\": \"\",\r\n    \"iso_code\": \"\"\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"firebase_id must be non-empty\",\r\n        \"phone_number must be non-empty\",\r\n        \"phone_number_int must be non-empty\",\r\n        \"country_code must be non-empty\",\r\n        \"secret_text must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"firebase_id must be non-empty\",\r\n        \"phone_number must be non-empty\",\r\n        \"phone_number_int must be non-empty\",\r\n        \"country_code must be non-empty\",\r\n        \"secret_text must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"protocolProfileBehavior": {}
}